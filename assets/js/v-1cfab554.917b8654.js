"use strict";(self.webpackChunkLunarVim_com=self.webpackChunkLunarVim_com||[]).push([[9129],{6658:(a,s,e)=>{e.r(s),e.d(s,{data:()=>n});const n={key:"v-1cfab554",path:"/dev/02-under-the-hood.html",title:"Under the Hood",lang:"en-US",frontmatter:{},excerpt:"",headers:[],filePathRelative:"dev/02-under-the-hood.md",git:{updatedTime:1631057646e3,contributors:[{name:"rebuilt",email:"memoryman51@hotmail.com",commits:5},{name:"christianchiarulli",email:"chrisatmachine@gmail.com",commits:1}]}}},6720:(a,s,e)=>{e.r(s),e.d(s,{default:()=>i});var n=e(6252),r=e(6193);const o=(0,n._)("h1",{id:"under-the-hood",tabindex:"-1"},[(0,n._)("a",{class:"header-anchor",href:"#under-the-hood","aria-hidden":"true"},"#"),(0,n.Uk)(" Under the Hood")],-1),t=(0,n._)("h1",{id:"logic-from-start-to-window-load",tabindex:"-1"},[(0,n._)("a",{class:"header-anchor",href:"#logic-from-start-to-window-load","aria-hidden":"true"},"#"),(0,n.Uk)(" Logic from start to window load")],-1),l=(0,n._)("p",null,[(0,n._)("img",{src:r,alt:"LunarVim initialization flowchart",title:"LunarVim initialization flowchart"})],-1),_=(0,n._)("p",null,"The above chart was made with the following markdown using mermaid markdown Last updated Wed Aug 4 10:04:27 PM CEST 2021",-1),p=(0,n._)("div",{class:"language-mermaid ext-mermaid line-numbers-mode"},[(0,n._)("pre",{class:"language-mermaid"},[(0,n._)("code",null,[(0,n._)("span",{class:"token keyword"},"graph"),(0,n.Uk)(" TD\n  rtp"),(0,n._)("span",{class:"token text string"},"[Set runtime path]"),(0,n.Uk)(),(0,n._)("span",{class:"token arrow operator"},"--\x3e"),(0,n.Uk)(" config_check"),(0,n._)("span",{class:"token text string"},"[Ensure user config exists]"),(0,n.Uk)("\n  config_check "),(0,n._)("span",{class:"token arrow operator"},"--"),(0,n.Uk)(" lv-config.lua "),(0,n._)("span",{class:"token arrow operator"},"--\x3e"),(0,n.Uk)(" print_rename_message"),(0,n._)("span",{class:"token text string"},'["Print a message asking user to rename file"]'),(0,n.Uk)("\n  config_check "),(0,n._)("span",{class:"token arrow operator"},"--"),(0,n.Uk)(" config.lua "),(0,n._)("span",{class:"token arrow operator"},"--\x3e"),(0,n.Uk)(" load_defaults"),(0,n._)("span",{class:"token text string"},"[Load default_config]"),(0,n.Uk)("\n  print_rename_message "),(0,n._)("span",{class:"token arrow operator"},"--\x3e"),(0,n.Uk)(" load_defaults\n  load_defaults "),(0,n._)("span",{class:"token arrow operator"},"--\x3e"),(0,n.Uk)(" load_lvim"),(0,n._)("span",{class:"token text string"},"[Load lvim globals: builtin, lsp, diagnostics, misc]"),(0,n.Uk)("\n  load_lvim "),(0,n._)("span",{class:"token arrow operator"},"--\x3e"),(0,n.Uk)(" load_lsp"),(0,n._)("span",{class:"token text string"},"[Load lsp file]"),(0,n.Uk)("\n  load_lsp "),(0,n._)("span",{class:"token arrow operator"},"--\x3e"),(0,n.Uk)(" load_common_on_attach"),(0,n._)("span",{class:"token text string"},"( Load common_on_attach for use in lang configuration )"),(0,n.Uk)("\n  load_common_on_attach "),(0,n._)("span",{class:"token arrow operator"},"--\x3e"),(0,n.Uk)(" load_common_capabilities"),(0,n._)("span",{class:"token text string"},"( Load common_capabilities for use in lang configuration)"),(0,n.Uk)("\n  load_common_capabilities "),(0,n._)("span",{class:"token arrow operator"},"--\x3e"),(0,n.Uk)(" load_common_on_init"),(0,n._)("span",{class:"token text string"},"( Set common_on_init for use in lang configuration )"),(0,n.Uk)("\n  load_common_on_init "),(0,n._)("span",{class:"token arrow operator"},"--\x3e"),(0,n.Uk)(" load_json"),(0,n._)("span",{class:"token text string"},"[Load Json schemas]"),(0,n.Uk)("\n  load_json "),(0,n._)("span",{class:"token arrow operator"},"--\x3e"),(0,n.Uk)(" load_lang"),(0,n._)("span",{class:"token text string"},"[Load lvim globals: lang]"),(0,n.Uk)("\n  load_lang "),(0,n._)("span",{class:"token arrow operator"},"--\x3e"),(0,n.Uk)(" load_keymappings"),(0,n._)("span",{class:"token text string"},"[Load Keymappings data but don't set Keymappings]"),(0,n.Uk)("\n  load_keymappings "),(0,n._)("span",{class:"token arrow operator"},"--\x3e"),(0,n.Uk)(" load_builtin_configs"),(0,n._)("span",{class:"token text string"},"[Load configuration for builtin plugins]"),(0,n.Uk)("\n  load_builtin_configs "),(0,n._)("span",{class:"token arrow operator"},"--\x3e"),(0,n.Uk)(" load_autocommands"),(0,n._)("span",{class:"token text string"},"[Load autocommands but don't set them]"),(0,n.Uk)("\n  load_autocommands "),(0,n._)("span",{class:"token arrow operator"},"--\x3e"),(0,n.Uk)(" set_default_options"),(0,n._)("span",{class:"token text string"},"( Set the default options for the neovim editor )"),(0,n.Uk)("\n  set_default_options "),(0,n._)("span",{class:"token arrow operator"},"--\x3e"),(0,n.Uk)(" load_user_config"),(0,n._)("span",{class:"token text string"},"[Load user configuration file]"),(0,n.Uk)("\n  load_user_config "),(0,n._)("span",{class:"token inter-arrow-label"},[(0,n._)("span",{class:"token arrow-head arrow operator"},"--"),(0,n.Uk)(),(0,n._)("span",{class:"token label property"},"status ok"),(0,n.Uk)(),(0,n._)("span",{class:"token arrow operator"},"--\x3e")]),(0,n.Uk)(" set_nvim_settings"),(0,n._)("span",{class:"token text string"},"[Set neovim settings]"),(0,n.Uk)("\n  load_user_config "),(0,n._)("span",{class:"token inter-arrow-label"},[(0,n._)("span",{class:"token arrow-head arrow operator"},"--"),(0,n.Uk)(),(0,n._)("span",{class:"token label property"},"status fail"),(0,n.Uk)(),(0,n._)("span",{class:"token arrow operator"},"--\x3e")]),(0,n.Uk)(" print_user_config_error"),(0,n._)("span",{class:"token text string"},'["Print something is wrong with your config"]'),(0,n.Uk)("\n  print_user_config_error "),(0,n._)("span",{class:"token arrow operator"},"--\x3e"),(0,n.Uk)(" set_nvim_settings\n  set_nvim_settings "),(0,n._)("span",{class:"token arrow operator"},"--\x3e"),(0,n.Uk)(" define_autogroups"),(0,n._)("span",{class:"token text string"},"[Define autogroups]"),(0,n.Uk)("\n  define_autogroups "),(0,n._)("span",{class:"token arrow operator"},"--\x3e"),(0,n.Uk)(" setup_plugins"),(0,n._)("span",{class:"token text string"},"[Setup Plugins]"),(0,n.Uk)("\n  setup_plugins "),(0,n._)("span",{class:"token arrow operator"},"--\x3e"),(0,n.Uk)(" plugin_callback_check"),(0,n._)("span",{class:"token text string"},'["Is there a callback set for lvim.builtin.<plugin>?"]'),(0,n.Uk)("\n  plugin_callback_check "),(0,n._)("span",{class:"token inter-arrow-label"},[(0,n._)("span",{class:"token arrow-head arrow operator"},"--"),(0,n.Uk)(),(0,n._)("span",{class:"token label property"},"Yes"),(0,n.Uk)(),(0,n._)("span",{class:"token arrow operator"},"--\x3e")]),(0,n.Uk)(" plugin_callback"),(0,n._)("span",{class:"token text string"},'["Call the callback for the plugin"]'),(0,n.Uk)("\n  plugin_callback_check "),(0,n._)("span",{class:"token inter-arrow-label"},[(0,n._)("span",{class:"token arrow-head arrow operator"},"--"),(0,n.Uk)(),(0,n._)("span",{class:"token label property"},"No"),(0,n.Uk)(),(0,n._)("span",{class:"token arrow operator"},"--\x3e")]),(0,n.Uk)(" colorscheme"),(0,n._)("span",{class:"token text string"},"[Set the colorscheme]"),(0,n.Uk)("\n  plugin_callback "),(0,n._)("span",{class:"token arrow operator"},"--\x3e"),(0,n.Uk)(" colorscheme\n  colorscheme "),(0,n._)("span",{class:"token arrow operator"},"--\x3e"),(0,n.Uk)(" autoformat"),(0,n._)("span",{class:"token text string"},"[Is format on save enabled?]"),(0,n.Uk)("\n  autoformat "),(0,n._)("span",{class:"token inter-arrow-label"},[(0,n._)("span",{class:"token arrow-head arrow operator"},"--"),(0,n.Uk)(),(0,n._)("span",{class:"token label property"},"yes"),(0,n.Uk)(),(0,n._)("span",{class:"token arrow operator"},"--\x3e")]),(0,n.Uk)(" autoformat_active"),(0,n._)("span",{class:"token text string"},"[Set an autocommand to enable autoformatting]"),(0,n.Uk)("\n  autoformat "),(0,n._)("span",{class:"token inter-arrow-label"},[(0,n._)("span",{class:"token arrow-head arrow operator"},"--"),(0,n.Uk)(),(0,n._)("span",{class:"token label property"},"no"),(0,n.Uk)(),(0,n._)("span",{class:"token arrow operator"},"--\x3e")]),(0,n.Uk)(" autoformat_disabled"),(0,n._)("span",{class:"token text string"},"[Look for an autoformat autocommand and remove it if it exists]"),(0,n.Uk)("\n  autoformat_active "),(0,n._)("span",{class:"token arrow operator"},"--\x3e"),(0,n.Uk)(" core_commands"),(0,n._)("span",{class:"token text string"},"[Load core.commands: QuickFixToggle]"),(0,n.Uk)("\n  autoformat_disabled "),(0,n._)("span",{class:"token arrow operator"},"--\x3e"),(0,n.Uk)(" core_commands\n  core_commands "),(0,n._)("span",{class:"token arrow operator"},"--\x3e"),(0,n.Uk)(" lsp_handlers"),(0,n._)("span",{class:"token text string"},'["Set up lsp handlers: publishDiagnostics, hover, signatureHelp"]'),(0,n.Uk)("\n  lsp_handlers "),(0,n._)("span",{class:"token arrow operator"},"--\x3e"),(0,n.Uk)(" null-ls"),(0,n._)("span",{class:"token text string"},'["Add null-ls as a language server in lspconfig"]'),(0,n.Uk)("\n  null-ls "),(0,n._)("span",{class:"token arrow operator"},"--\x3e"),(0,n.Uk)(" nlsp"),(0,n._)("span",{class:"token text string"},'["Set up NlspSettings"]'),(0,n.Uk)("\n  nlsp "),(0,n._)("span",{class:"token arrow operator"},"--\x3e"),(0,n.Uk)(" set_keymappings"),(0,n._)("span",{class:"token text string"},'["Apply default keymappings"]'),(0,n.Uk)("\n  set_keymappings "),(0,n._)("span",{class:"token arrow operator"},"--\x3e"),(0,n.Uk)(" override_keymaps"),(0,n._)("span",{class:"token text string"},'["Append to default keymappings"]'),(0,n.Uk)("\n  override_keymaps "),(0,n._)("span",{class:"token arrow operator"},"--\x3e"),(0,n.Uk)(" setup_common_on_init"),(0,n._)("span",{class:"token text string"},'["Setup common_on_init"]'),(0,n.Uk)("\n  setup_common_on_init "),(0,n._)("span",{class:"token arrow operator"},"--\x3e"),(0,n.Uk)(" common_on_init_callback_check"),(0,n._)("span",{class:"token text string"},'["Does a common on init callback exist?"]'),(0,n.Uk)("\n  common_on_init_callback_check "),(0,n._)("span",{class:"token inter-arrow-label"},[(0,n._)("span",{class:"token arrow-head arrow operator"},"--"),(0,n.Uk)(),(0,n._)("span",{class:"token label property"},"Yes"),(0,n.Uk)(),(0,n._)("span",{class:"token arrow operator"},"--\x3e")]),(0,n.Uk)(" common_on_init_callback"),(0,n._)("span",{class:"token text string"},'["Call the callback"]'),(0,n.Uk)("\n  common_on_init_callback_check "),(0,n._)("span",{class:"token inter-arrow-label"},[(0,n._)("span",{class:"token arrow-head arrow operator"},"--"),(0,n.Uk)(),(0,n._)("span",{class:"token label property"},"No"),(0,n.Uk)(),(0,n._)("span",{class:"token arrow operator"},"--\x3e")]),(0,n.Uk)(" check_for_formatters"),(0,n._)("span",{class:"token text string"},'["Check if formatters are explicitly set"]'),(0,n.Uk)("\n  common_on_init_callback "),(0,n._)("span",{class:"token arrow operator"},"--\x3e"),(0,n.Uk)(" check_for_formatters\n  check_for_formatters "),(0,n._)("span",{class:"token inter-arrow-label"},[(0,n._)("span",{class:"token arrow-head arrow operator"},"--"),(0,n.Uk)(),(0,n._)("span",{class:"token label property"},"Yes"),(0,n.Uk)(),(0,n._)("span",{class:"token arrow operator"},"--\x3e")]),(0,n.Uk)(" turn_off_lsp_formatting"),(0,n._)("span",{class:"token text string"},'["Turn off resolved_capabilities.document_formatting"]'),(0,n.Uk)("\n  turn_off_lsp_formatting "),(0,n._)("span",{class:"token arrow operator"},"--\x3e"),(0,n.Uk)(" setup_common_on_attach"),(0,n._)("span",{class:"token text string"},'["Setup common on attach"]'),(0,n.Uk)("\n  setup_common_on_attach "),(0,n._)("span",{class:"token arrow operator"},"--"),(0,n.Uk)(" Has an lsp.on_attach_callback   "),(0,n._)("span",{class:"token arrow operator"},"--\x3e"),(0,n.Uk)(" call_lsp_on_attach_callback"),(0,n._)("span",{class:"token text string"},'["Call lsp on_attach callback"]'),(0,n.Uk)("\n  check_for_formatters "),(0,n._)("span",{class:"token inter-arrow-label"},[(0,n._)("span",{class:"token arrow-head arrow operator"},"--"),(0,n.Uk)(),(0,n._)("span",{class:"token label property"},"No"),(0,n.Uk)(),(0,n._)("span",{class:"token arrow operator"},"--\x3e")]),(0,n.Uk)("  setup_common_on_attach\n  setup_common_on_attach "),(0,n._)("span",{class:"token inter-arrow-label"},[(0,n._)("span",{class:"token arrow-head arrow operator"},"--"),(0,n.Uk)(),(0,n._)("span",{class:"token label property"},"No callback defined"),(0,n.Uk)(),(0,n._)("span",{class:"token arrow operator"},"--\x3e")]),(0,n.Uk)(" smart_cwd_check"),(0,n._)("span",{class:"token text string"},'["Is lvim.lsp.smart_cwd set to true?"]'),(0,n.Uk)("\n  smart_cwd_check "),(0,n._)("span",{class:"token inter-arrow-label"},[(0,n._)("span",{class:"token arrow-head arrow operator"},"--"),(0,n.Uk)(),(0,n._)("span",{class:"token label property"},"True"),(0,n.Uk)(),(0,n._)("span",{class:"token arrow operator"},"--\x3e")]),(0,n.Uk)(" query_lsp_for_cwd"),(0,n._)("span",{class:"token text string"},'["Use root directory from LSP"]'),(0,n.Uk)("\n  smart_cwd_check "),(0,n._)("span",{class:"token inter-arrow-label"},[(0,n._)("span",{class:"token arrow-head arrow operator"},"--"),(0,n.Uk)(),(0,n._)("span",{class:"token label property"},"False"),(0,n.Uk)(),(0,n._)("span",{class:"token arrow operator"},"--\x3e")]),(0,n.Uk)(" setup_null_ls"),(0,n._)("span",{class:"token text string"},'["Setup null-ls formatters and linters"]'),(0,n.Uk)("\n  setup_null_ls "),(0,n._)("span",{class:"token arrow operator"},"--\x3e"),(0,n.Uk)(" validate_provider_request"),(0,n._)("span",{class:"token text string"},'["Does a valid provider exist?"]'),(0,n.Uk)("\n  query_lsp_for_cwd "),(0,n._)("span",{class:"token arrow operator"},"--\x3e"),(0,n.Uk)(" setup_null_ls\n  call_lsp_on_attach_callback "),(0,n._)("span",{class:"token arrow operator"},"--\x3e"),(0,n.Uk)(" smart_cwd_check\n  validate_provider_request "),(0,n._)("span",{class:"token inter-arrow-label"},[(0,n._)("span",{class:"token arrow-head arrow operator"},"--"),(0,n.Uk)(),(0,n._)("span",{class:"token label property"},"nil or empty provider"),(0,n.Uk)(),(0,n._)("span",{class:"token arrow operator"},"--\x3e")]),(0,n.Uk)(" lsp_setup"),(0,n._)("span",{class:"token text string"},'["Setup LSP"]'),(0,n.Uk)("\n  validate_provider_request "),(0,n._)("span",{class:"token inter-arrow-label"},[(0,n._)("span",{class:"token arrow-head arrow operator"},"--"),(0,n.Uk)(),(0,n._)("span",{class:"token label property"},"Executable exists"),(0,n.Uk)(),(0,n._)("span",{class:"token arrow operator"},"--\x3e")]),(0,n.Uk)(" is_provider_eslint"),(0,n._)("span",{class:"token text string"},'["Is provider eslint?"]'),(0,n.Uk)("\n  is_provider_eslint "),(0,n._)("span",{class:"token inter-arrow-label"},[(0,n._)("span",{class:"token arrow-head arrow operator"},"--"),(0,n.Uk)(),(0,n._)("span",{class:"token label property"},"Yes"),(0,n.Uk)(),(0,n._)("span",{class:"token arrow operator"},"--\x3e")]),(0,n.Uk)(" replace_with_eslintd"),(0,n._)("span",{class:"token text string"},'["Replace it with eslint_d"]'),(0,n.Uk)("\n  replace_with_eslintd "),(0,n._)("span",{class:"token arrow operator"},"--\x3e"),(0,n.Uk)("  add_provider_to_table"),(0,n._)("span",{class:"token text string"},'["Add it to the provider to a table"]'),(0,n.Uk)("\n  is_provider_eslint "),(0,n._)("span",{class:"token inter-arrow-label"},[(0,n._)("span",{class:"token arrow-head arrow operator"},"--"),(0,n.Uk)(),(0,n._)("span",{class:"token label property"},"No"),(0,n.Uk)(),(0,n._)("span",{class:"token arrow operator"},"--\x3e")]),(0,n.Uk)(" add_provider_to_table\n  validate_provider_request "),(0,n._)("span",{class:"token inter-arrow-label"},[(0,n._)("span",{class:"token arrow-head arrow operator"},"--"),(0,n.Uk)(),(0,n._)("span",{class:"token label property"},"Executable does not exist"),(0,n.Uk)(),(0,n._)("span",{class:"token arrow operator"},"--\x3e")]),(0,n.Uk)(" print_provider_error"),(0,n._)("span",{class:"token text string"},'["Print error about not being able to find formatting executable"]'),(0,n.Uk)("\n  add_provider_to_table "),(0,n._)("span",{class:"token arrow operator"},"--\x3e"),(0,n.Uk)(" lsp_setup\n  print_provider_error "),(0,n._)("span",{class:"token arrow operator"},"--\x3e"),(0,n.Uk)(" lsp_setup\n  lsp_setup "),(0,n._)("span",{class:"token arrow operator"},"--\x3e"),(0,n.Uk)(" lsp_override_check"),(0,n._)("span",{class:"token text string"},'["Is there an lvim.lsp.override set?"]'),(0,n.Uk)("\n  lsp_override_check "),(0,n._)("span",{class:"token inter-arrow-label"},[(0,n._)("span",{class:"token arrow-head arrow operator"},"--"),(0,n.Uk)(),(0,n._)("span",{class:"token label property"},"Yes"),(0,n.Uk)(),(0,n._)("span",{class:"token arrow operator"},"--\x3e")]),(0,n.Uk)(" lsp_override"),(0,n._)("span",{class:"token text string"},'["Use the override table"]'),(0,n.Uk)("\n  lsp_override_check "),(0,n._)("span",{class:"token inter-arrow-label"},[(0,n._)("span",{class:"token arrow-head arrow operator"},"--"),(0,n.Uk)(),(0,n._)("span",{class:"token label property"},"No"),(0,n.Uk)(),(0,n._)("span",{class:"token arrow operator"},"--\x3e")]),(0,n.Uk)(" first_window_load"),(0,n._)("span",{class:"token text string"},'["First window loads"]'),(0,n.Uk)("\n  lsp_override "),(0,n._)("span",{class:"token arrow operator"},"--\x3e"),(0,n.Uk)(" first_window_load\n")])]),(0,n._)("div",{class:"line-numbers"},[(0,n._)("span",{class:"line-number"},"1"),(0,n._)("br"),(0,n._)("span",{class:"line-number"},"2"),(0,n._)("br"),(0,n._)("span",{class:"line-number"},"3"),(0,n._)("br"),(0,n._)("span",{class:"line-number"},"4"),(0,n._)("br"),(0,n._)("span",{class:"line-number"},"5"),(0,n._)("br"),(0,n._)("span",{class:"line-number"},"6"),(0,n._)("br"),(0,n._)("span",{class:"line-number"},"7"),(0,n._)("br"),(0,n._)("span",{class:"line-number"},"8"),(0,n._)("br"),(0,n._)("span",{class:"line-number"},"9"),(0,n._)("br"),(0,n._)("span",{class:"line-number"},"10"),(0,n._)("br"),(0,n._)("span",{class:"line-number"},"11"),(0,n._)("br"),(0,n._)("span",{class:"line-number"},"12"),(0,n._)("br"),(0,n._)("span",{class:"line-number"},"13"),(0,n._)("br"),(0,n._)("span",{class:"line-number"},"14"),(0,n._)("br"),(0,n._)("span",{class:"line-number"},"15"),(0,n._)("br"),(0,n._)("span",{class:"line-number"},"16"),(0,n._)("br"),(0,n._)("span",{class:"line-number"},"17"),(0,n._)("br"),(0,n._)("span",{class:"line-number"},"18"),(0,n._)("br"),(0,n._)("span",{class:"line-number"},"19"),(0,n._)("br"),(0,n._)("span",{class:"line-number"},"20"),(0,n._)("br"),(0,n._)("span",{class:"line-number"},"21"),(0,n._)("br"),(0,n._)("span",{class:"line-number"},"22"),(0,n._)("br"),(0,n._)("span",{class:"line-number"},"23"),(0,n._)("br"),(0,n._)("span",{class:"line-number"},"24"),(0,n._)("br"),(0,n._)("span",{class:"line-number"},"25"),(0,n._)("br"),(0,n._)("span",{class:"line-number"},"26"),(0,n._)("br"),(0,n._)("span",{class:"line-number"},"27"),(0,n._)("br"),(0,n._)("span",{class:"line-number"},"28"),(0,n._)("br"),(0,n._)("span",{class:"line-number"},"29"),(0,n._)("br"),(0,n._)("span",{class:"line-number"},"30"),(0,n._)("br"),(0,n._)("span",{class:"line-number"},"31"),(0,n._)("br"),(0,n._)("span",{class:"line-number"},"32"),(0,n._)("br"),(0,n._)("span",{class:"line-number"},"33"),(0,n._)("br"),(0,n._)("span",{class:"line-number"},"34"),(0,n._)("br"),(0,n._)("span",{class:"line-number"},"35"),(0,n._)("br"),(0,n._)("span",{class:"line-number"},"36"),(0,n._)("br"),(0,n._)("span",{class:"line-number"},"37"),(0,n._)("br"),(0,n._)("span",{class:"line-number"},"38"),(0,n._)("br"),(0,n._)("span",{class:"line-number"},"39"),(0,n._)("br"),(0,n._)("span",{class:"line-number"},"40"),(0,n._)("br"),(0,n._)("span",{class:"line-number"},"41"),(0,n._)("br"),(0,n._)("span",{class:"line-number"},"42"),(0,n._)("br"),(0,n._)("span",{class:"line-number"},"43"),(0,n._)("br"),(0,n._)("span",{class:"line-number"},"44"),(0,n._)("br"),(0,n._)("span",{class:"line-number"},"45"),(0,n._)("br"),(0,n._)("span",{class:"line-number"},"46"),(0,n._)("br"),(0,n._)("span",{class:"line-number"},"47"),(0,n._)("br"),(0,n._)("span",{class:"line-number"},"48"),(0,n._)("br"),(0,n._)("span",{class:"line-number"},"49"),(0,n._)("br"),(0,n._)("span",{class:"line-number"},"50"),(0,n._)("br"),(0,n._)("span",{class:"line-number"},"51"),(0,n._)("br"),(0,n._)("span",{class:"line-number"},"52"),(0,n._)("br"),(0,n._)("span",{class:"line-number"},"53"),(0,n._)("br"),(0,n._)("span",{class:"line-number"},"54"),(0,n._)("br"),(0,n._)("span",{class:"line-number"},"55"),(0,n._)("br"),(0,n._)("span",{class:"line-number"},"56"),(0,n._)("br"),(0,n._)("span",{class:"line-number"},"57"),(0,n._)("br"),(0,n._)("span",{class:"line-number"},"58"),(0,n._)("br"),(0,n._)("span",{class:"line-number"},"59"),(0,n._)("br"),(0,n._)("span",{class:"line-number"},"60"),(0,n._)("br"),(0,n._)("span",{class:"line-number"},"61"),(0,n._)("br"),(0,n._)("span",{class:"line-number"},"62"),(0,n._)("br"),(0,n._)("span",{class:"line-number"},"63"),(0,n._)("br")])],-1),c={},i=(0,e(3744).Z)(c,[["render",function(a,s){return(0,n.wg)(),(0,n.iD)(n.HY,null,[o,t,l,_,p],64)}]])},3744:(a,s)=>{s.Z=(a,s)=>{for(const[e,n]of s)a[e]=n;return a}},6193:(a,s,e)=>{a.exports=e.p+"assets/img/lunarvim_initialization.34ed58f3.png"}}]);