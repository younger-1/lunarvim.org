"use strict";(self.webpackChunkLunarVim_com=self.webpackChunkLunarVim_com||[]).push([[2650],{1368:(n,s,a)=>{a.r(s),a.d(s,{data:()=>t});const t={key:"v-6eaea258",path:"/plugins/03-extra-plugins.html",title:"Extra Plugins",lang:"en-US",frontmatter:{},excerpt:"",headers:[{level:2,title:"Navigation plugins",slug:"navigation-plugins",children:[{level:3,title:"hop",slug:"hop",children:[]},{level:3,title:"lightspeed",slug:"lightspeed",children:[]},{level:3,title:"minimap",slug:"minimap",children:[]},{level:3,title:"numb",slug:"numb",children:[]},{level:3,title:"nvim-bqf",slug:"nvim-bqf",children:[]},{level:3,title:"nvim-spectre",slug:"nvim-spectre",children:[]},{level:3,title:"rnvimr",slug:"rnvimr",children:[]},{level:3,title:"snap",slug:"snap",children:[]},{level:3,title:"vim-matchup",slug:"vim-matchup",children:[]}]},{level:2,title:"Git",slug:"git",children:[{level:3,title:"diffview",slug:"diffview",children:[]},{level:3,title:"git-blame",slug:"git-blame",children:[]},{level:3,title:"gitlinker",slug:"gitlinker",children:[]},{level:3,title:"octo",slug:"octo",children:[]},{level:3,title:"vim-fugitive",slug:"vim-fugitive",children:[]},{level:3,title:"vim-gist",slug:"vim-gist",children:[]}]},{level:2,title:"Treesitter",slug:"treesitter",children:[{level:3,title:"nvim-ts-autotag",slug:"nvim-ts-autotag",children:[]},{level:3,title:"nvim-ts-context-commentstring",slug:"nvim-ts-context-commentstring",children:[]},{level:3,title:"nvim-ts-rainbow",slug:"nvim-ts-rainbow",children:[]},{level:3,title:"playground",slug:"playground",children:[]}]},{level:2,title:"Telescope Extensions",slug:"telescope-extensions",children:[{level:3,title:"telescope-fzy-native.nvim",slug:"telescope-fzy-native-nvim",children:[]},{level:3,title:"telescope-project",slug:"telescope-project",children:[]}]},{level:2,title:"Colorschemes",slug:"colorschemes",children:[{level:3,title:"lsp-colors",slug:"lsp-colors",children:[]},{level:3,title:"lush.nvim",slug:"lush-nvim",children:[]},{level:3,title:"nvim-colorizer",slug:"nvim-colorizer",children:[]}]},{level:2,title:"LSP Enhancement",slug:"lsp-enhancement",children:[{level:3,title:"compe-tabnine",slug:"compe-tabnine",children:[]},{level:3,title:"goto-preview",slug:"goto-preview",children:[]},{level:3,title:"lsp-rooter",slug:"lsp-rooter",children:[]},{level:3,title:"lsp_signature.nvim",slug:"lsp-signature-nvim",children:[]},{level:3,title:"symbols-outline.nvim",slug:"symbols-outline-nvim",children:[]},{level:3,title:"trouble.nvim",slug:"trouble-nvim",children:[]}]},{level:2,title:"General",slug:"general",children:[{level:3,title:"autosave",slug:"autosave",children:[]},{level:3,title:"codi.vim",slug:"codi-vim",children:[]},{level:3,title:"dial.nvim",slug:"dial-nvim",children:[]},{level:3,title:"glow.nvim",slug:"glow-nvim",children:[]},{level:3,title:"indent-blankline",slug:"indent-blankline",children:[]},{level:3,title:"markdown-preview.nvim",slug:"markdown-preview-nvim",children:[]},{level:3,title:"neoscroll",slug:"neoscroll",children:[]},{level:3,title:"neuron",slug:"neuron",children:[]},{level:3,title:"nvim-lastplace",slug:"nvim-lastplace",children:[]},{level:3,title:"persistence",slug:"persistence",children:[]},{level:3,title:"todo-comments.nvim",slug:"todo-comments-nvim",children:[]},{level:3,title:"vim-cursorword",slug:"vim-cursorword",children:[]},{level:3,title:"vim-repeat",slug:"vim-repeat",children:[]},{level:3,title:"vim-sanegx",slug:"vim-sanegx",children:[]},{level:3,title:"vim-surround",slug:"vim-surround",children:[]},{level:3,title:"vim-wakatime",slug:"vim-wakatime",children:[]}]},{level:2,title:"Language specific",slug:"language-specific",children:[{level:3,title:"bracey",slug:"bracey",children:[]},{level:3,title:"vim-bundler",slug:"vim-bundler",children:[]},{level:3,title:"vim-rails",slug:"vim-rails",children:[]}]}],filePathRelative:"plugins/03-extra-plugins.md",git:{updatedTime:163584684e4,contributors:[{name:"CristÃ³bal Gajardo Vera",email:"cristobalgajardo.v@gmail.com",commits:2},{name:"Abouzar Parvan",email:"abzcoding@users.noreply.github.com",commits:1},{name:"Iordanis Grigoriou",email:"igrigoriou@eclassifiedsgroup.com",commits:1},{name:"kylo252",email:"59826753+kylo252@users.noreply.github.com",commits:1},{name:"milesnzl",email:"miles@debian",commits:1},{name:"rebuilt",email:"memoryman51@hotmail.com",commits:1}]}}},1834:(n,s,a)=>{a.r(s),a.d(s,{default:()=>Ce});var t=a(6252);const e=(0,t._)("h1",{id:"extra-plugins",tabindex:"-1"},[(0,t._)("a",{class:"header-anchor",href:"#extra-plugins","aria-hidden":"true"},"#"),(0,t.Uk)(" Extra Plugins")],-1),p=(0,t._)("p",null,"Every plugin that works with Neovim works with LunarVim, here are some examples to get you started.",-1),o=(0,t._)("h2",{id:"navigation-plugins",tabindex:"-1"},[(0,t._)("a",{class:"header-anchor",href:"#navigation-plugins","aria-hidden":"true"},"#"),(0,t.Uk)(" Navigation plugins")],-1),l={id:"hop",tabindex:"-1"},c=(0,t._)("a",{class:"header-anchor",href:"#hop","aria-hidden":"true"},"#",-1),u=(0,t.Uk)(),r={href:"https://github.com/phaazon/hop.nvim",target:"_blank",rel:"noopener noreferrer"},i=(0,t.Uk)("hop"),k=(0,t.uE)('<p><strong>neovim motions on speed!</strong></p><div class="language-lua ext-lua line-numbers-mode"><pre class="language-lua"><code><span class="token punctuation">{</span>\n  <span class="token string">&quot;phaazon/hop.nvim&quot;</span><span class="token punctuation">,</span>\n  event <span class="token operator">=</span> <span class="token string">&quot;BufRead&quot;</span><span class="token punctuation">,</span>\n  config <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n    <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;hop&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setup</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n    vim<span class="token punctuation">.</span>api<span class="token punctuation">.</span><span class="token function">nvim_set_keymap</span><span class="token punctuation">(</span><span class="token string">&quot;n&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;s&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;:HopChar2&lt;cr&gt;&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> silent <span class="token operator">=</span> <span class="token keyword">true</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>\n    vim<span class="token punctuation">.</span>api<span class="token punctuation">.</span><span class="token function">nvim_set_keymap</span><span class="token punctuation">(</span><span class="token string">&quot;n&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;S&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;:HopWord&lt;cr&gt;&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> silent <span class="token operator">=</span> <span class="token keyword">true</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>\n  <span class="token keyword">end</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">,</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div>',2),m={id:"lightspeed",tabindex:"-1"},b=(0,t._)("a",{class:"header-anchor",href:"#lightspeed","aria-hidden":"true"},"#",-1),d=(0,t.Uk)(),g={href:"https://github.com/ggandor/lightspeed.nvim",target:"_blank",rel:"noopener noreferrer"},h=(0,t.Uk)("lightspeed"),v=(0,t.uE)('<p><strong>jetpack codebase navigation</strong></p><div class="language-lua ext-lua line-numbers-mode"><pre class="language-lua"><code><span class="token punctuation">{</span>\n  <span class="token string">&quot;ggandor/lightspeed.nvim&quot;</span><span class="token punctuation">,</span>\n  event <span class="token operator">=</span> <span class="token string">&quot;BufRead&quot;</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">,</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div>',2),q={id:"minimap",tabindex:"-1"},f=(0,t._)("a",{class:"header-anchor",href:"#minimap","aria-hidden":"true"},"#",-1),_=(0,t.Uk)(),w={href:"https://github.com/wfxr/minimap.vim",target:"_blank",rel:"noopener noreferrer"},y=(0,t.Uk)("minimap"),x=(0,t.uE)('<p><strong>blazing fast minimap/scrollbar written in Rust</strong></p><div class="language-lua ext-lua line-numbers-mode"><pre class="language-lua"><code><span class="token punctuation">{</span>\n  <span class="token string">&#39;wfxr/minimap.vim&#39;</span><span class="token punctuation">,</span>\n  run <span class="token operator">=</span> <span class="token string">&quot;cargo install --locked code-minimap&quot;</span><span class="token punctuation">,</span>\n  <span class="token comment">-- cmd = {&quot;Minimap&quot;, &quot;MinimapClose&quot;, &quot;MinimapToggle&quot;, &quot;MinimapRefresh&quot;, &quot;MinimapUpdateHighlight&quot;},</span>\n  config <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span>\n    vim<span class="token punctuation">.</span><span class="token function">cmd</span> <span class="token punctuation">(</span><span class="token string">&quot;let g:minimap_width = 10&quot;</span><span class="token punctuation">)</span>\n    vim<span class="token punctuation">.</span><span class="token function">cmd</span> <span class="token punctuation">(</span><span class="token string">&quot;let g:minimap_auto_start = 1&quot;</span><span class="token punctuation">)</span>\n    vim<span class="token punctuation">.</span><span class="token function">cmd</span> <span class="token punctuation">(</span><span class="token string">&quot;let g:minimap_auto_start_win_enter = 1&quot;</span><span class="token punctuation">)</span>\n  <span class="token keyword">end</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">,</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div>',2),U={id:"numb",tabindex:"-1"},E=(0,t._)("a",{class:"header-anchor",href:"#numb","aria-hidden":"true"},"#",-1),W=(0,t.Uk)(),B={href:"https://github.com/nacro90/numb.nvim",target:"_blank",rel:"noopener noreferrer"},R=(0,t.Uk)("numb"),z=(0,t.uE)('<p><strong>jump to the line</strong></p><div class="language-lua ext-lua line-numbers-mode"><pre class="language-lua"><code><span class="token punctuation">{</span>\n  <span class="token string">&quot;nacro90/numb.nvim&quot;</span><span class="token punctuation">,</span>\n  event <span class="token operator">=</span> <span class="token string">&quot;BufRead&quot;</span><span class="token punctuation">,</span>\n  config <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n  <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;numb&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setup</span> <span class="token punctuation">{</span>\n    show_numbers <span class="token operator">=</span> <span class="token keyword">true</span><span class="token punctuation">,</span> <span class="token comment">-- Enable &#39;number&#39; for the window while peeking</span>\n    show_cursorline <span class="token operator">=</span> <span class="token keyword">true</span><span class="token punctuation">,</span> <span class="token comment">-- Enable &#39;cursorline&#39; for the window while peeking</span>\n  <span class="token punctuation">}</span>\n  <span class="token keyword">end</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">,</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div>',2),G={id:"nvim-bqf",tabindex:"-1"},T=(0,t._)("a",{class:"header-anchor",href:"#nvim-bqf","aria-hidden":"true"},"#",-1),C=(0,t.Uk)(),S={href:"https://github.com/kevinhwang91/nvim-bqf",target:"_blank",rel:"noopener noreferrer"},P=(0,t.Uk)("nvim-bqf"),j=(0,t.uE)('<p><strong>better quickfix window</strong></p><div class="language-lua ext-lua line-numbers-mode"><pre class="language-lua"><code><span class="token punctuation">{</span>\n  <span class="token string">&quot;kevinhwang91/nvim-bqf&quot;</span><span class="token punctuation">,</span>\n  event <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token string">&quot;BufRead&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;BufNew&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  config <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n  <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;bqf&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setup</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n          auto_enable <span class="token operator">=</span> <span class="token keyword">true</span><span class="token punctuation">,</span>\n          preview <span class="token operator">=</span> <span class="token punctuation">{</span>\n          win_height <span class="token operator">=</span> <span class="token number">12</span><span class="token punctuation">,</span>\n          win_vheight <span class="token operator">=</span> <span class="token number">12</span><span class="token punctuation">,</span>\n          delay_syntax <span class="token operator">=</span> <span class="token number">80</span><span class="token punctuation">,</span>\n          border_chars <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token string">&quot;â&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;â&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;â&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;â&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;â&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;â&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;â&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;â&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;â&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>\n          <span class="token punctuation">}</span><span class="token punctuation">,</span>\n          func_map <span class="token operator">=</span> <span class="token punctuation">{</span>\n          vsplit <span class="token operator">=</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">,</span>\n          ptogglemode <span class="token operator">=</span> <span class="token string">&quot;z,&quot;</span><span class="token punctuation">,</span>\n          stoggleup <span class="token operator">=</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">,</span>\n          <span class="token punctuation">}</span><span class="token punctuation">,</span>\n          filter <span class="token operator">=</span> <span class="token punctuation">{</span>\n          fzf <span class="token operator">=</span> <span class="token punctuation">{</span>\n          action_for <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token punctuation">[</span><span class="token string">&quot;ctrl-s&quot;</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">&quot;split&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>\n          extra_opts <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token string">&quot;--bind&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;ctrl-o:toggle-all&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;--prompt&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;&gt; &quot;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>\n          <span class="token punctuation">}</span><span class="token punctuation">,</span>\n          <span class="token punctuation">}</span><span class="token punctuation">,</span>\n          <span class="token punctuation">}</span><span class="token punctuation">)</span>\n  <span class="token keyword">end</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">,</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br></div></div>',2),A={id:"nvim-spectre",tabindex:"-1"},L=(0,t._)("a",{class:"header-anchor",href:"#nvim-spectre","aria-hidden":"true"},"#",-1),F=(0,t.Uk)(),N={href:"https://github.com/windwp/nvim-spectre",target:"_blank",rel:"noopener noreferrer"},H=(0,t.Uk)("nvim-spectre"),M=(0,t.uE)('<p><strong>search and replace</strong></p><div class="language-lua ext-lua line-numbers-mode"><pre class="language-lua"><code><span class="token punctuation">{</span>\n  <span class="token string">&quot;windwp/nvim-spectre&quot;</span><span class="token punctuation">,</span>\n  event <span class="token operator">=</span> <span class="token string">&quot;BufRead&quot;</span><span class="token punctuation">,</span>\n  config <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n    <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;spectre&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setup</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n  <span class="token keyword">end</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">,</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div>',2),V={id:"rnvimr",tabindex:"-1"},I=(0,t._)("a",{class:"header-anchor",href:"#rnvimr","aria-hidden":"true"},"#",-1),D=(0,t.Uk)(),O={href:"https://github.com/kevinhwang91/rnvimr",target:"_blank",rel:"noopener noreferrer"},Y=(0,t.Uk)("rnvimr"),J=(0,t.uE)('<p><strong>ranger file explorer window</strong></p><div class="language-lua ext-lua line-numbers-mode"><pre class="language-lua"><code><span class="token punctuation">{</span>\n  <span class="token string">&quot;kevinhwang91/rnvimr&quot;</span><span class="token punctuation">,</span>\n    cmd <span class="token operator">=</span> <span class="token string">&quot;RnvimrToggle&quot;</span><span class="token punctuation">,</span>\n    config <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n      vim<span class="token punctuation">.</span>g<span class="token punctuation">.</span>rnvimr_draw_border <span class="token operator">=</span> <span class="token number">1</span>\n      vim<span class="token punctuation">.</span>g<span class="token punctuation">.</span>rnvimr_pick_enable <span class="token operator">=</span> <span class="token number">1</span>\n      vim<span class="token punctuation">.</span>g<span class="token punctuation">.</span>rnvimr_bw_enable <span class="token operator">=</span> <span class="token number">1</span>\n      <span class="token keyword">end</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">,</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div>',2),K={id:"snap",tabindex:"-1"},Q=(0,t._)("a",{class:"header-anchor",href:"#snap","aria-hidden":"true"},"#",-1),Z=(0,t.Uk)(),X={href:"https://github.com/camspiers/snap",target:"_blank",rel:"noopener noreferrer"},$=(0,t.Uk)("snap"),nn=(0,t.uE)('<p><strong>fast finder system</strong></p><div class="language-lua ext-lua line-numbers-mode"><pre class="language-lua"><code><span class="token punctuation">{</span>\n  <span class="token string">&quot;camspiers/snap&quot;</span><span class="token punctuation">,</span>\n  rocks <span class="token operator">=</span> <span class="token string">&quot;fzy&quot;</span><span class="token punctuation">,</span>\n  config <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n    <span class="token keyword">local</span> snap <span class="token operator">=</span> require <span class="token string">&quot;snap&quot;</span>\n    <span class="token keyword">local</span> layout <span class="token operator">=</span> snap<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&quot;layout&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>bottom\n    <span class="token keyword">local</span> file <span class="token operator">=</span> snap<span class="token punctuation">.</span>config<span class="token punctuation">.</span>file<span class="token punctuation">:</span><span class="token function">with</span> <span class="token punctuation">{</span> consumer <span class="token operator">=</span> <span class="token string">&quot;fzy&quot;</span><span class="token punctuation">,</span> layout <span class="token operator">=</span> layout <span class="token punctuation">}</span>\n    <span class="token keyword">local</span> vimgrep <span class="token operator">=</span> snap<span class="token punctuation">.</span>config<span class="token punctuation">.</span>vimgrep<span class="token punctuation">:</span><span class="token function">with</span> <span class="token punctuation">{</span> layout <span class="token operator">=</span> layout <span class="token punctuation">}</span>\n    snap<span class="token punctuation">.</span>register<span class="token punctuation">.</span><span class="token function">command</span><span class="token punctuation">(</span><span class="token string">&quot;find_files&quot;</span><span class="token punctuation">,</span> <span class="token function">file</span> <span class="token punctuation">{</span> producer <span class="token operator">=</span> <span class="token string">&quot;ripgrep.file&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>\n    snap<span class="token punctuation">.</span>register<span class="token punctuation">.</span><span class="token function">command</span><span class="token punctuation">(</span><span class="token string">&quot;buffers&quot;</span><span class="token punctuation">,</span> <span class="token function">file</span> <span class="token punctuation">{</span> producer <span class="token operator">=</span> <span class="token string">&quot;vim.buffer&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>\n    snap<span class="token punctuation">.</span>register<span class="token punctuation">.</span><span class="token function">command</span><span class="token punctuation">(</span><span class="token string">&quot;oldfiles&quot;</span><span class="token punctuation">,</span> <span class="token function">file</span> <span class="token punctuation">{</span> producer <span class="token operator">=</span> <span class="token string">&quot;vim.oldfile&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>\n    snap<span class="token punctuation">.</span>register<span class="token punctuation">.</span><span class="token function">command</span><span class="token punctuation">(</span><span class="token string">&quot;live_grep&quot;</span><span class="token punctuation">,</span> <span class="token function">vimgrep</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span>\n  <span class="token keyword">end</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">,</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div>',2),sn={id:"vim-matchup",tabindex:"-1"},an=(0,t._)("a",{class:"header-anchor",href:"#vim-matchup","aria-hidden":"true"},"#",-1),tn=(0,t.Uk)(),en={href:"https://github.com/andymass/vim-matchup",target:"_blank",rel:"noopener noreferrer"},pn=(0,t.Uk)("vim-matchup"),on=(0,t.uE)('<p><strong>navigate and highlight matching words</strong></p><div class="language-lua ext-lua line-numbers-mode"><pre class="language-lua"><code><span class="token punctuation">{</span>\n  <span class="token string">&quot;andymass/vim-matchup&quot;</span><span class="token punctuation">,</span>\n  event <span class="token operator">=</span> <span class="token string">&quot;CursorMoved&quot;</span><span class="token punctuation">,</span>\n  config <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n    vim<span class="token punctuation">.</span>g<span class="token punctuation">.</span>matchup_matchparen_offscreen <span class="token operator">=</span> <span class="token punctuation">{</span> method <span class="token operator">=</span> <span class="token string">&quot;popup&quot;</span> <span class="token punctuation">}</span>\n  <span class="token keyword">end</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">,</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><h2 id="git" tabindex="-1"><a class="header-anchor" href="#git" aria-hidden="true">#</a> Git</h2>',3),ln={id:"diffview",tabindex:"-1"},cn=(0,t._)("a",{class:"header-anchor",href:"#diffview","aria-hidden":"true"},"#",-1),un=(0,t.Uk)(),rn={href:"https://github.com/sindrets/diffview.nvim",target:"_blank",rel:"noopener noreferrer"},kn=(0,t.Uk)("diffview"),mn=(0,t.uE)('<p><strong>git diff in a single tabpage</strong></p><div class="language-lua ext-lua line-numbers-mode"><pre class="language-lua"><code><span class="token punctuation">{</span>\n  <span class="token string">&quot;sindrets/diffview.nvim&quot;</span><span class="token punctuation">,</span>\n  event <span class="token operator">=</span> <span class="token string">&quot;BufRead&quot;</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">,</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div>',2),bn={id:"git-blame",tabindex:"-1"},dn=(0,t._)("a",{class:"header-anchor",href:"#git-blame","aria-hidden":"true"},"#",-1),gn=(0,t.Uk)(),hn={href:"https://github.com/f-person/git-blame.nvim",target:"_blank",rel:"noopener noreferrer"},vn=(0,t.Uk)("git-blame"),qn=(0,t.uE)('<p><strong>show git blame</strong></p><div class="language-lua ext-lua line-numbers-mode"><pre class="language-lua"><code><span class="token punctuation">{</span>\n  <span class="token string">&quot;f-person/git-blame.nvim&quot;</span><span class="token punctuation">,</span>\n  event <span class="token operator">=</span> <span class="token string">&quot;BufRead&quot;</span><span class="token punctuation">,</span>\n  config <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n    vim<span class="token punctuation">.</span>cmd <span class="token string">&quot;highlight default link gitblame SpecialComment&quot;</span>\n    vim<span class="token punctuation">.</span>g<span class="token punctuation">.</span>gitblame_enabled <span class="token operator">=</span> <span class="token number">0</span>\n  <span class="token keyword">end</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">,</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div>',2),fn={id:"gitlinker",tabindex:"-1"},_n=(0,t._)("a",{class:"header-anchor",href:"#gitlinker","aria-hidden":"true"},"#",-1),wn=(0,t.Uk)(),yn={href:"https://github.com/ruifm/gitlinker.nvim",target:"_blank",rel:"noopener noreferrer"},xn=(0,t.Uk)("gitlinker"),Un=(0,t.uE)('<p><strong>generate shareable file permalinks for several git web frontend hosts</strong></p><div class="language-lua ext-lua line-numbers-mode"><pre class="language-lua"><code><span class="token punctuation">{</span>\n  <span class="token string">&quot;ruifm/gitlinker.nvim&quot;</span><span class="token punctuation">,</span>\n  event <span class="token operator">=</span> <span class="token string">&quot;BufRead&quot;</span><span class="token punctuation">,</span>\n  config <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n  <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;gitlinker&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setup</span> <span class="token punctuation">{</span>\n        opts <span class="token operator">=</span> <span class="token punctuation">{</span>\n          <span class="token comment">-- remote = &#39;github&#39;, -- force the use of a specific remote</span>\n            <span class="token comment">-- adds current line nr in the url for normal mode</span>\n            add_current_line_on_normal_mode <span class="token operator">=</span> <span class="token keyword">true</span><span class="token punctuation">,</span>\n          <span class="token comment">-- callback for what to do with the url</span>\n            action_callback <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;gitlinker.actions&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>open_in_browser<span class="token punctuation">,</span>\n          <span class="token comment">-- print the url after performing the action</span>\n            print_url <span class="token operator">=</span> <span class="token keyword">false</span><span class="token punctuation">,</span>\n          <span class="token comment">-- mapping to call url generation</span>\n            mappings <span class="token operator">=</span> <span class="token string">&quot;&lt;leader&gt;gy&quot;</span><span class="token punctuation">,</span>\n        <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span>\n  <span class="token keyword">end</span><span class="token punctuation">,</span>\n  requires <span class="token operator">=</span> <span class="token string">&quot;nvim-lua/plenary.nvim&quot;</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">,</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br></div></div>',2),En={id:"octo",tabindex:"-1"},Wn=(0,t._)("a",{class:"header-anchor",href:"#octo","aria-hidden":"true"},"#",-1),Bn=(0,t.Uk)(),Rn={href:"https://github.com/pwntester/octo.nvim",target:"_blank",rel:"noopener noreferrer"},zn=(0,t.Uk)("octo"),Gn=(0,t.uE)('<p><strong>edit and review GitHub issues and pull requests</strong></p><div class="language-lua ext-lua line-numbers-mode"><pre class="language-lua"><code><span class="token punctuation">{</span>\n  <span class="token string">&quot;pwntester/octo.nvim&quot;</span><span class="token punctuation">,</span>\n  event <span class="token operator">=</span> <span class="token string">&quot;BufRead&quot;</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">,</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div>',2),Tn={id:"vim-fugitive",tabindex:"-1"},Cn=(0,t._)("a",{class:"header-anchor",href:"#vim-fugitive","aria-hidden":"true"},"#",-1),Sn=(0,t.Uk)(),Pn={href:"https://github.com/tpope/vim-fugitive",target:"_blank",rel:"noopener noreferrer"},jn=(0,t.Uk)("vim-fugitive"),An=(0,t.uE)('<p><strong>git wrapper</strong></p><div class="language-lua ext-lua line-numbers-mode"><pre class="language-lua"><code><span class="token punctuation">{</span>\n  <span class="token string">&quot;tpope/vim-fugitive&quot;</span><span class="token punctuation">,</span>\n  cmd <span class="token operator">=</span> <span class="token punctuation">{</span>\n    <span class="token string">&quot;G&quot;</span><span class="token punctuation">,</span>\n    <span class="token string">&quot;Git&quot;</span><span class="token punctuation">,</span>\n    <span class="token string">&quot;Gdiffsplit&quot;</span><span class="token punctuation">,</span>\n    <span class="token string">&quot;Gread&quot;</span><span class="token punctuation">,</span>\n    <span class="token string">&quot;Gwrite&quot;</span><span class="token punctuation">,</span>\n    <span class="token string">&quot;Ggrep&quot;</span><span class="token punctuation">,</span>\n    <span class="token string">&quot;GMove&quot;</span><span class="token punctuation">,</span>\n    <span class="token string">&quot;GDelete&quot;</span><span class="token punctuation">,</span>\n    <span class="token string">&quot;GBrowse&quot;</span><span class="token punctuation">,</span>\n    <span class="token string">&quot;GRemove&quot;</span><span class="token punctuation">,</span>\n    <span class="token string">&quot;GRename&quot;</span><span class="token punctuation">,</span>\n    <span class="token string">&quot;Glgrep&quot;</span><span class="token punctuation">,</span>\n    <span class="token string">&quot;Gedit&quot;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  ft <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">&quot;fugitive&quot;</span><span class="token punctuation">}</span>\n<span class="token punctuation">}</span><span class="token punctuation">,</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br></div></div>',2),Ln={id:"vim-gist",tabindex:"-1"},Fn=(0,t._)("a",{class:"header-anchor",href:"#vim-gist","aria-hidden":"true"},"#",-1),Nn=(0,t.Uk)(),Hn={href:"https://github.com/mattn/vim-gist",target:"_blank",rel:"noopener noreferrer"},Mn=(0,t.Uk)("vim-gist"),Vn=(0,t.uE)('<p><strong>create/edit Github gists</strong></p><div class="language-lua ext-lua line-numbers-mode"><pre class="language-lua"><code><span class="token punctuation">{</span>\n  <span class="token string">&quot;mattn/vim-gist&quot;</span><span class="token punctuation">,</span>\n  event <span class="token operator">=</span> <span class="token string">&quot;BufRead&quot;</span><span class="token punctuation">,</span>\n  requires <span class="token operator">=</span> <span class="token string">&quot;mattn/webapi-vim&quot;</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">,</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h2 id="treesitter" tabindex="-1"><a class="header-anchor" href="#treesitter" aria-hidden="true">#</a> Treesitter</h2>',3),In={id:"nvim-ts-autotag",tabindex:"-1"},Dn=(0,t._)("a",{class:"header-anchor",href:"#nvim-ts-autotag","aria-hidden":"true"},"#",-1),On=(0,t.Uk)(),Yn={href:"https://github.com/windwp/nvim-ts-autotag",target:"_blank",rel:"noopener noreferrer"},Jn=(0,t.Uk)("nvim-ts-autotag"),Kn=(0,t.uE)('<p><strong>autoclose and autorename html tag</strong></p><div class="language-lua ext-lua line-numbers-mode"><pre class="language-lua"><code><span class="token punctuation">{</span>\n  <span class="token string">&quot;windwp/nvim-ts-autotag&quot;</span><span class="token punctuation">,</span>\n  event <span class="token operator">=</span> <span class="token string">&quot;InsertEnter&quot;</span><span class="token punctuation">,</span>\n  config <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n    <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;nvim-ts-autotag&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setup</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n  <span class="token keyword">end</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">,</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div>',2),Qn={id:"nvim-ts-context-commentstring",tabindex:"-1"},Zn=(0,t._)("a",{class:"header-anchor",href:"#nvim-ts-context-commentstring","aria-hidden":"true"},"#",-1),Xn=(0,t.Uk)(),$n={href:"https://github.com/JoosepAlviste/nvim-ts-context-commentstring",target:"_blank",rel:"noopener noreferrer"},ns=(0,t.Uk)("nvim-ts-context-commentstring"),ss=(0,t.uE)('<p><strong>commentstring option based on the cursor location</strong></p><div class="language-lua ext-lua line-numbers-mode"><pre class="language-lua"><code><span class="token punctuation">{</span>\n  <span class="token string">&quot;JoosepAlviste/nvim-ts-context-commentstring&quot;</span><span class="token punctuation">,</span>\n  event <span class="token operator">=</span> <span class="token string">&quot;BufRead&quot;</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">,</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div>',2),as={id:"nvim-ts-rainbow",tabindex:"-1"},ts=(0,t._)("a",{class:"header-anchor",href:"#nvim-ts-rainbow","aria-hidden":"true"},"#",-1),es=(0,t.Uk)(),ps={href:"https://github.com/p00f/nvim-ts-rainbow",target:"_blank",rel:"noopener noreferrer"},os=(0,t.Uk)("nvim-ts-rainbow"),ls=(0,t.uE)('<p><strong>rainbow parentheses</strong></p><div class="language-lua ext-lua line-numbers-mode"><pre class="language-lua"><code><span class="token punctuation">{</span>\n  <span class="token string">&quot;p00f/nvim-ts-rainbow&quot;</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">,</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div>',2),cs={id:"playground",tabindex:"-1"},us=(0,t._)("a",{class:"header-anchor",href:"#playground","aria-hidden":"true"},"#",-1),rs=(0,t.Uk)(),is={href:"https://github.com/nvim-treesitter/playground",target:"_blank",rel:"noopener noreferrer"},ks=(0,t.Uk)("playground"),ms=(0,t.uE)('<p><strong>view treesitter information</strong></p><div class="language-lua ext-lua line-numbers-mode"><pre class="language-lua"><code><span class="token punctuation">{</span>\n  <span class="token string">&quot;nvim-treesitter/playground&quot;</span><span class="token punctuation">,</span>\n  event <span class="token operator">=</span> <span class="token string">&quot;BufRead&quot;</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">,</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><h2 id="telescope-extensions" tabindex="-1"><a class="header-anchor" href="#telescope-extensions" aria-hidden="true">#</a> Telescope Extensions</h2>',3),bs={id:"telescope-fzy-native-nvim",tabindex:"-1"},ds=(0,t._)("a",{class:"header-anchor",href:"#telescope-fzy-native-nvim","aria-hidden":"true"},"#",-1),gs=(0,t.Uk)(),hs={href:"https://github.com/nvim-telescope/telescope-fzy-native.nvim",target:"_blank",rel:"noopener noreferrer"},vs=(0,t.Uk)("telescope-fzy-native.nvim"),qs=(0,t.uE)('<p><strong>fzy style sorter that is compiled</strong></p><div class="language-lua ext-lua line-numbers-mode"><pre class="language-lua"><code><span class="token punctuation">{</span>\n  <span class="token string">&quot;nvim-telescope/telescope-fzy-native.nvim&quot;</span><span class="token punctuation">,</span>\n  run <span class="token operator">=</span> <span class="token string">&quot;make&quot;</span><span class="token punctuation">,</span>\n  event <span class="token operator">=</span> <span class="token string">&quot;BufRead&quot;</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">,</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div>',2),fs={id:"telescope-project",tabindex:"-1"},_s=(0,t._)("a",{class:"header-anchor",href:"#telescope-project","aria-hidden":"true"},"#",-1),ws=(0,t.Uk)(),ys={href:"https://github.com/nvim-telescope/telescope-project.nvim",target:"_blank",rel:"noopener noreferrer"},xs=(0,t.Uk)("telescope-project"),Us=(0,t.uE)('<p><strong>switch between projects</strong></p><div class="language-lua ext-lua line-numbers-mode"><pre class="language-lua"><code><span class="token punctuation">{</span>\n  <span class="token string">&quot;nvim-telescope/telescope-project.nvim&quot;</span><span class="token punctuation">,</span>\n  event <span class="token operator">=</span> <span class="token string">&quot;BufWinEnter&quot;</span><span class="token punctuation">,</span>\n  setup <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n    vim<span class="token punctuation">.</span>cmd <span class="token string">[[packadd telescope.nvim]]</span>\n  <span class="token keyword">end</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">,</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><h2 id="colorschemes" tabindex="-1"><a class="header-anchor" href="#colorschemes" aria-hidden="true">#</a> Colorschemes</h2>',3),Es={id:"lsp-colors",tabindex:"-1"},Ws=(0,t._)("a",{class:"header-anchor",href:"#lsp-colors","aria-hidden":"true"},"#",-1),Bs=(0,t.Uk)(),Rs={href:"https://github.com/folke/lsp-colors.nvim",target:"_blank",rel:"noopener noreferrer"},zs=(0,t.Uk)("lsp-colors"),Gs=(0,t.uE)('<p><strong>lsp diagnostics highlight groups for non lsp colorschemes</strong></p><div class="language-lua ext-lua line-numbers-mode"><pre class="language-lua"><code><span class="token punctuation">{</span>\n  <span class="token string">&quot;folke/lsp-colors.nvim&quot;</span><span class="token punctuation">,</span>\n  event <span class="token operator">=</span> <span class="token string">&quot;BufRead&quot;</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">,</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div>',2),Ts={id:"lush-nvim",tabindex:"-1"},Cs=(0,t._)("a",{class:"header-anchor",href:"#lush-nvim","aria-hidden":"true"},"#",-1),Ss=(0,t.Uk)(),Ps={href:"https://github.com/rktjmp/lush.nvim",target:"_blank",rel:"noopener noreferrer"},js=(0,t.Uk)("lush.nvim"),As=(0,t.uE)('<p><strong>colorscheme creation aid</strong></p><div class="language-lua ext-lua line-numbers-mode"><pre class="language-lua"><code><span class="token punctuation">{</span>\n  <span class="token string">&quot;rktjmp/lush.nvim&quot;</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">,</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div>',2),Ls={id:"nvim-colorizer",tabindex:"-1"},Fs=(0,t._)("a",{class:"header-anchor",href:"#nvim-colorizer","aria-hidden":"true"},"#",-1),Ns=(0,t.Uk)(),Hs={href:"https://github.com/norcalli/nvim-colorizer.lua",target:"_blank",rel:"noopener noreferrer"},Ms=(0,t.Uk)("nvim-colorizer"),Vs=(0,t.uE)('<p><strong>color highlighter</strong></p><div class="language-lua ext-lua line-numbers-mode"><pre class="language-lua"><code><span class="token punctuation">{</span>\n  <span class="token string">&quot;norcalli/nvim-colorizer.lua&quot;</span><span class="token punctuation">,</span>\n    config <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n      <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;colorizer&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setup</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token string">&quot;*&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>\n          RGB <span class="token operator">=</span> <span class="token keyword">true</span><span class="token punctuation">,</span> <span class="token comment">-- #RGB hex codes</span>\n          RRGGBB <span class="token operator">=</span> <span class="token keyword">true</span><span class="token punctuation">,</span> <span class="token comment">-- #RRGGBB hex codes</span>\n          RRGGBBAA <span class="token operator">=</span> <span class="token keyword">true</span><span class="token punctuation">,</span> <span class="token comment">-- #RRGGBBAA hex codes</span>\n          rgb_fn <span class="token operator">=</span> <span class="token keyword">true</span><span class="token punctuation">,</span> <span class="token comment">-- CSS rgb() and rgba() functions</span>\n          hsl_fn <span class="token operator">=</span> <span class="token keyword">true</span><span class="token punctuation">,</span> <span class="token comment">-- CSS hsl() and hsla() functions</span>\n          css <span class="token operator">=</span> <span class="token keyword">true</span><span class="token punctuation">,</span> <span class="token comment">-- Enable all CSS features: rgb_fn, hsl_fn, names, RGB, RRGGBB</span>\n          css_fn <span class="token operator">=</span> <span class="token keyword">true</span><span class="token punctuation">,</span> <span class="token comment">-- Enable all CSS *functions*: rgb_fn, hsl_fn</span>\n          <span class="token punctuation">}</span><span class="token punctuation">)</span>\n  <span class="token keyword">end</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">,</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div><h2 id="lsp-enhancement" tabindex="-1"><a class="header-anchor" href="#lsp-enhancement" aria-hidden="true">#</a> LSP Enhancement</h2>',3),Is={id:"compe-tabnine",tabindex:"-1"},Ds=(0,t._)("a",{class:"header-anchor",href:"#compe-tabnine","aria-hidden":"true"},"#",-1),Os=(0,t.Uk)(),Ys={href:"https://github.com/tzachar/compe-tabnine",target:"_blank",rel:"noopener noreferrer"},Js=(0,t.Uk)("compe-tabnine"),Ks=(0,t.uE)('<p><strong>TabNine completion engine for hrsh7th/nvim-compe</strong></p><div class="language-lua ext-lua line-numbers-mode"><pre class="language-lua"><code><span class="token punctuation">{</span>\n  <span class="token string">&quot;tzachar/compe-tabnine&quot;</span><span class="token punctuation">,</span>\n  run <span class="token operator">=</span> <span class="token string">&quot;./install.sh&quot;</span><span class="token punctuation">,</span>\n  requires <span class="token operator">=</span> <span class="token string">&quot;hrsh7th/nvim-compe&quot;</span><span class="token punctuation">,</span>\n  event <span class="token operator">=</span> <span class="token string">&quot;InsertEnter&quot;</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">,</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div>',2),Qs={id:"goto-preview",tabindex:"-1"},Zs=(0,t._)("a",{class:"header-anchor",href:"#goto-preview","aria-hidden":"true"},"#",-1),Xs=(0,t.Uk)(),$s={href:"https://github.com/rmagatti/goto-preview",target:"_blank",rel:"noopener noreferrer"},na=(0,t.Uk)("goto-preview"),sa=(0,t.uE)('<p><strong>previewing goto definition calls</strong></p><div class="language-lua ext-lua line-numbers-mode"><pre class="language-lua"><code><span class="token punctuation">{</span>\n  <span class="token string">&quot;rmagatti/goto-preview&quot;</span><span class="token punctuation">,</span>\n  config <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n  <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;goto-preview&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setup</span> <span class="token punctuation">{</span>\n        width <span class="token operator">=</span> <span class="token number">120</span><span class="token punctuation">;</span> <span class="token comment">-- Width of the floating window</span>\n        height <span class="token operator">=</span> <span class="token number">25</span><span class="token punctuation">;</span> <span class="token comment">-- Height of the floating window</span>\n        default_mappings <span class="token operator">=</span> <span class="token keyword">false</span><span class="token punctuation">;</span> <span class="token comment">-- Bind default mappings</span>\n        debug <span class="token operator">=</span> <span class="token keyword">false</span><span class="token punctuation">;</span> <span class="token comment">-- Print debug information</span>\n        opacity <span class="token operator">=</span> <span class="token keyword">nil</span><span class="token punctuation">;</span> <span class="token comment">-- 0-100 opacity level of the floating window where 100 is fully transparent.</span>\n        post_open_hook <span class="token operator">=</span> <span class="token keyword">nil</span> <span class="token comment">-- A function taking two arguments, a buffer and a window to be ran as a hook.</span>\n        <span class="token comment">-- You can use &quot;default_mappings = true&quot; setup option</span>\n        <span class="token comment">-- Or explicitly set keybindings</span>\n        <span class="token comment">-- vim.cmd(&quot;nnoremap gpd &lt;cmd&gt;lua require(&#39;goto-preview&#39;).goto_preview_definition()&lt;CR&gt;&quot;)</span>\n        <span class="token comment">-- vim.cmd(&quot;nnoremap gpi &lt;cmd&gt;lua require(&#39;goto-preview&#39;).goto_preview_implementation()&lt;CR&gt;&quot;)</span>\n        <span class="token comment">-- vim.cmd(&quot;nnoremap gP &lt;cmd&gt;lua require(&#39;goto-preview&#39;).close_all_win()&lt;CR&gt;&quot;)</span>\n    <span class="token punctuation">}</span>\n  <span class="token keyword">end</span>\n<span class="token punctuation">}</span><span class="token punctuation">,</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br></div></div>',2),aa={id:"lsp-rooter",tabindex:"-1"},ta=(0,t._)("a",{class:"header-anchor",href:"#lsp-rooter","aria-hidden":"true"},"#",-1),ea=(0,t.Uk)(),pa={href:"https://github.com/ahmedkhalf/lsp-rooter.nvim",target:"_blank",rel:"noopener noreferrer"},oa=(0,t.Uk)("lsp-rooter"),la=(0,t.uE)('<p><strong>cwd to the project&#39;s root directory</strong></p><div class="language-lua ext-lua line-numbers-mode"><pre class="language-lua"><code><span class="token punctuation">{</span>\n  <span class="token string">&quot;ahmedkhalf/lsp-rooter.nvim&quot;</span><span class="token punctuation">,</span>\n  event <span class="token operator">=</span> <span class="token string">&quot;BufRead&quot;</span><span class="token punctuation">,</span>\n  config <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n    <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;lsp-rooter&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setup</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n  <span class="token keyword">end</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">,</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div>',2),ca={id:"lsp-signature-nvim",tabindex:"-1"},ua=(0,t._)("a",{class:"header-anchor",href:"#lsp-signature-nvim","aria-hidden":"true"},"#",-1),ra=(0,t.Uk)(),ia={href:"https://github.com/ray-x/lsp_signature.nvim",target:"_blank",rel:"noopener noreferrer"},ka=(0,t.Uk)("lsp_signature.nvim"),ma=(0,t.uE)('<p><strong>hint when you type</strong></p><div class="language-lua ext-lua line-numbers-mode"><pre class="language-lua"><code><span class="token punctuation">{</span>\n  <span class="token string">&quot;ray-x/lsp_signature.nvim&quot;</span><span class="token punctuation">,</span>\n  event <span class="token operator">=</span> <span class="token string">&quot;BufRead&quot;</span><span class="token punctuation">,</span>\n  config <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n    require <span class="token string">&quot;lsp_signature&quot;</span><span class="token punctuation">.</span><span class="token function">setup</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n  <span class="token keyword">end</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div>',2),ba={id:"symbols-outline-nvim",tabindex:"-1"},da=(0,t._)("a",{class:"header-anchor",href:"#symbols-outline-nvim","aria-hidden":"true"},"#",-1),ga=(0,t.Uk)(),ha={href:"https://github.com/simrat39/symbols-outline.nvim",target:"_blank",rel:"noopener noreferrer"},va=(0,t.Uk)("symbols-outline.nvim"),qa=(0,t.uE)('<p><strong>a tree like view for symbols</strong></p><div class="language-lua ext-lua line-numbers-mode"><pre class="language-lua"><code><span class="token punctuation">{</span>\n  <span class="token string">&quot;simrat39/symbols-outline.nvim&quot;</span><span class="token punctuation">,</span>\n  cmd <span class="token operator">=</span> <span class="token string">&quot;SymbolsOutline&quot;</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">,</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div>',2),fa={id:"trouble-nvim",tabindex:"-1"},_a=(0,t._)("a",{class:"header-anchor",href:"#trouble-nvim","aria-hidden":"true"},"#",-1),wa=(0,t.Uk)(),ya={href:"https://github.com/folke/trouble.nvim",target:"_blank",rel:"noopener noreferrer"},xa=(0,t.Uk)("trouble.nvim"),Ua=(0,t.uE)('<p><strong>diagnostics, references, telescope results, quickfix and location lists</strong></p><div class="language-lua ext-lua line-numbers-mode"><pre class="language-lua"><code><span class="token punctuation">{</span>\n  <span class="token string">&quot;folke/trouble.nvim&quot;</span><span class="token punctuation">,</span>\n    cmd <span class="token operator">=</span> <span class="token string">&quot;TroubleToggle&quot;</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">,</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>Also define keybindings in <code>config.lua</code></p><div class="language-lua ext-lua line-numbers-mode"><pre class="language-lua"><code>lvim<span class="token punctuation">.</span>builtin<span class="token punctuation">.</span>which_key<span class="token punctuation">.</span>mappings<span class="token punctuation">[</span><span class="token string">&quot;t&quot;</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">{</span>\n  name <span class="token operator">=</span> <span class="token string">&quot;Diagnostics&quot;</span><span class="token punctuation">,</span>\n  t <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token string">&quot;&lt;cmd&gt;TroubleToggle&lt;cr&gt;&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;trouble&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  w <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token string">&quot;&lt;cmd&gt;TroubleToggle lsp_workspace_diagnostics&lt;cr&gt;&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;workspace&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  d <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token string">&quot;&lt;cmd&gt;TroubleToggle lsp_document_diagnostics&lt;cr&gt;&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;document&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  q <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token string">&quot;&lt;cmd&gt;TroubleToggle quickfix&lt;cr&gt;&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;quickfix&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  l <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token string">&quot;&lt;cmd&gt;TroubleToggle loclist&lt;cr&gt;&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;loclist&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  r <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token string">&quot;&lt;cmd&gt;TroubleToggle lsp_references&lt;cr&gt;&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;references&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">,</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><h2 id="general" tabindex="-1"><a class="header-anchor" href="#general" aria-hidden="true">#</a> General</h2>',5),Ea={id:"autosave",tabindex:"-1"},Wa=(0,t._)("a",{class:"header-anchor",href:"#autosave","aria-hidden":"true"},"#",-1),Ba=(0,t.Uk)(),Ra={href:"https://github.com/Pocco81/AutoSave.nvim",target:"_blank",rel:"noopener noreferrer"},za=(0,t.Uk)("autosave"),Ga=(0,t.uE)('<p><strong>automatically saving your work whenever you make changes to it</strong></p><div class="language-lua ext-lua line-numbers-mode"><pre class="language-lua"><code><span class="token punctuation">{</span>\n  <span class="token string">&quot;Pocco81/AutoSave.nvim&quot;</span><span class="token punctuation">,</span>\n  config <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n    <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;autosave&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setup</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n  <span class="token keyword">end</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">,</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div>',2),Ta={id:"codi-vim",tabindex:"-1"},Ca=(0,t._)("a",{class:"header-anchor",href:"#codi-vim","aria-hidden":"true"},"#",-1),Sa=(0,t.Uk)(),Pa={href:"https://github.com/metakirby5/codi.vim",target:"_blank",rel:"noopener noreferrer"},ja=(0,t.Uk)("codi.vim"),Aa=(0,t.uE)('<p><strong>interactive scratchpad for hackers</strong></p><div class="language-lua ext-lua line-numbers-mode"><pre class="language-lua"><code><span class="token punctuation">{</span>\n  <span class="token string">&quot;metakirby5/codi.vim&quot;</span><span class="token punctuation">,</span>\n  cmd <span class="token operator">=</span> <span class="token string">&quot;Codi&quot;</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">,</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div>',2),La={id:"dial-nvim",tabindex:"-1"},Fa=(0,t._)("a",{class:"header-anchor",href:"#dial-nvim","aria-hidden":"true"},"#",-1),Na=(0,t.Uk)(),Ha={href:"https://github.com/monaqa/dial.nvim",target:"_blank",rel:"noopener noreferrer"},Ma=(0,t.Uk)("dial.nvim"),Va=(0,t.uE)('<p><strong>extended incrementing/decrementing</strong></p><div class="language-lua ext-lua line-numbers-mode"><pre class="language-lua"><code><span class="token punctuation">{</span>\n  <span class="token string">&quot;monaqa/dial.nvim&quot;</span><span class="token punctuation">,</span>\n  event <span class="token operator">=</span> <span class="token string">&quot;BufRead&quot;</span><span class="token punctuation">,</span>\n  config <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n    <span class="token keyword">local</span> dial <span class="token operator">=</span> require <span class="token string">&quot;dial&quot;</span>\n    vim<span class="token punctuation">.</span>cmd <span class="token string">[[\n    nmap &lt;C-a&gt; &lt;Plug&gt;(dial-increment)\n      nmap &lt;C-x&gt; &lt;Plug&gt;(dial-decrement)\n      vmap &lt;C-a&gt; &lt;Plug&gt;(dial-increment)\n      vmap &lt;C-x&gt; &lt;Plug&gt;(dial-decrement)\n      vmap g&lt;C-a&gt; &lt;Plug&gt;(dial-increment-additional)\n      vmap g&lt;C-x&gt; &lt;Plug&gt;(dial-decrement-additional)\n    ]]</span>\n\n    dial<span class="token punctuation">.</span>augends<span class="token punctuation">[</span><span class="token string">&quot;custom#boolean&quot;</span><span class="token punctuation">]</span> <span class="token operator">=</span> dial<span class="token punctuation">.</span>common<span class="token punctuation">.</span><span class="token function">enum_cyclic</span> <span class="token punctuation">{</span>\n      name <span class="token operator">=</span> <span class="token string">&quot;boolean&quot;</span><span class="token punctuation">,</span>\n      strlist <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token string">&quot;true&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;false&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span>\n    table<span class="token punctuation">.</span><span class="token function">insert</span><span class="token punctuation">(</span>dial<span class="token punctuation">.</span>config<span class="token punctuation">.</span>searchlist<span class="token punctuation">.</span>normal<span class="token punctuation">,</span> <span class="token string">&quot;custom#boolean&quot;</span><span class="token punctuation">)</span>\n\n    <span class="token comment">-- For Languages which prefer True/False, e.g. python.</span>\n    dial<span class="token punctuation">.</span>augends<span class="token punctuation">[</span><span class="token string">&quot;custom#Boolean&quot;</span><span class="token punctuation">]</span> <span class="token operator">=</span> dial<span class="token punctuation">.</span>common<span class="token punctuation">.</span><span class="token function">enum_cyclic</span> <span class="token punctuation">{</span>\n      name <span class="token operator">=</span> <span class="token string">&quot;Boolean&quot;</span><span class="token punctuation">,</span>\n      strlist <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token string">&quot;True&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;False&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span>\n    table<span class="token punctuation">.</span><span class="token function">insert</span><span class="token punctuation">(</span>dial<span class="token punctuation">.</span>config<span class="token punctuation">.</span>searchlist<span class="token punctuation">.</span>normal<span class="token punctuation">,</span> <span class="token string">&quot;custom#Boolean&quot;</span><span class="token punctuation">)</span>\n  <span class="token keyword">end</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">,</span>\n\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br></div></div>',2),Ia={id:"glow-nvim",tabindex:"-1"},Da=(0,t._)("a",{class:"header-anchor",href:"#glow-nvim","aria-hidden":"true"},"#",-1),Oa=(0,t.Uk)(),Ya={href:"https://github.com/npxbr/glow.nvim",target:"_blank",rel:"noopener noreferrer"},Ja=(0,t.Uk)("glow.nvim"),Ka=(0,t.uE)('<p><strong>preview markdown in neovim</strong></p><div class="language-lua ext-lua line-numbers-mode"><pre class="language-lua"><code><span class="token comment">-- You must install glow globally</span>\n<span class="token comment">-- https://github.com/charmbracelet/glow</span>\n<span class="token comment">-- yay -S glow</span>\n<span class="token punctuation">{</span>\n  <span class="token string">&quot;npxbr/glow.nvim&quot;</span><span class="token punctuation">,</span>\n  ft <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">&quot;markdown&quot;</span><span class="token punctuation">}</span>\n  <span class="token comment">-- run = &quot;yay -S glow&quot;</span>\n<span class="token punctuation">}</span><span class="token punctuation">,</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div>',2),Qa={id:"indent-blankline",tabindex:"-1"},Za=(0,t._)("a",{class:"header-anchor",href:"#indent-blankline","aria-hidden":"true"},"#",-1),Xa=(0,t.Uk)(),$a={href:"https://github.com/lukas-reineke/indent-blankline.nvim",target:"_blank",rel:"noopener noreferrer"},nt=(0,t.Uk)("indent-blankline"),st=(0,t.uE)('<p><strong>indentation guides for every line</strong></p><div class="language-lua ext-lua line-numbers-mode"><pre class="language-lua"><code><span class="token punctuation">{</span>\n  <span class="token string">&quot;lukas-reineke/indent-blankline.nvim&quot;</span><span class="token punctuation">,</span>\n  event <span class="token operator">=</span> <span class="token string">&quot;BufRead&quot;</span><span class="token punctuation">,</span>\n  setup <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n    vim<span class="token punctuation">.</span>g<span class="token punctuation">.</span>indentLine_enabled <span class="token operator">=</span> <span class="token number">1</span>\n    vim<span class="token punctuation">.</span>g<span class="token punctuation">.</span>indent_blankline_char <span class="token operator">=</span> <span class="token string">&quot;â&quot;</span>\n    vim<span class="token punctuation">.</span>g<span class="token punctuation">.</span>indent_blankline_filetype_exclude <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">&quot;help&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;terminal&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;dashboard&quot;</span><span class="token punctuation">}</span>\n    vim<span class="token punctuation">.</span>g<span class="token punctuation">.</span>indent_blankline_buftype_exclude <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">&quot;terminal&quot;</span><span class="token punctuation">}</span>\n    vim<span class="token punctuation">.</span>g<span class="token punctuation">.</span>indent_blankline_show_trailing_blankline_indent <span class="token operator">=</span> <span class="token keyword">false</span>\n    vim<span class="token punctuation">.</span>g<span class="token punctuation">.</span>indent_blankline_show_first_indent_level <span class="token operator">=</span> <span class="token keyword">false</span>\n  <span class="token keyword">end</span>\n<span class="token punctuation">}</span><span class="token punctuation">,</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div>',2),at={id:"markdown-preview-nvim",tabindex:"-1"},tt=(0,t._)("a",{class:"header-anchor",href:"#markdown-preview-nvim","aria-hidden":"true"},"#",-1),et=(0,t.Uk)(),pt={href:"https://github.com/iamcco/markdown-preview.nvim",target:"_blank",rel:"noopener noreferrer"},ot=(0,t.Uk)("markdown-preview.nvim"),lt=(0,t.uE)('<p><strong>preview markdown in the browser</strong></p><div class="language-lua ext-lua line-numbers-mode"><pre class="language-lua"><code><span class="token punctuation">{</span>\n  <span class="token string">&quot;iamcco/markdown-preview.nvim&quot;</span><span class="token punctuation">,</span>\n  run <span class="token operator">=</span> <span class="token string">&quot;cd app &amp;&amp; npm install&quot;</span><span class="token punctuation">,</span>\n  ft <span class="token operator">=</span> <span class="token string">&quot;markdown&quot;</span><span class="token punctuation">,</span>\n  config <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n    vim<span class="token punctuation">.</span>g<span class="token punctuation">.</span>mkdp_auto_start <span class="token operator">=</span> <span class="token number">1</span>\n  <span class="token keyword">end</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">,</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div>',2),ct={id:"neoscroll",tabindex:"-1"},ut=(0,t._)("a",{class:"header-anchor",href:"#neoscroll","aria-hidden":"true"},"#",-1),rt=(0,t.Uk)(),it={href:"https://github.com/karb94/neoscroll.nvim",target:"_blank",rel:"noopener noreferrer"},kt=(0,t.Uk)("neoscroll"),mt=(0,t.uE)('<p><strong>smooth scrolling</strong></p><div class="language-lua ext-lua line-numbers-mode"><pre class="language-lua"><code><span class="token punctuation">{</span>\n  <span class="token string">&quot;karb94/neoscroll.nvim&quot;</span><span class="token punctuation">,</span>\n  event <span class="token operator">=</span> <span class="token string">&quot;WinScrolled&quot;</span><span class="token punctuation">,</span>\n  config <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n  <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;neoscroll&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setup</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n        <span class="token comment">-- All these keys will be mapped to their corresponding default scrolling animation</span>\n        mappings <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">&#39;&lt;C-u&gt;&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;&lt;C-d&gt;&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;&lt;C-b&gt;&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;&lt;C-f&gt;&#39;</span><span class="token punctuation">,</span>\n        <span class="token string">&#39;&lt;C-y&gt;&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;&lt;C-e&gt;&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;zt&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;zz&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;zb&#39;</span><span class="token punctuation">}</span><span class="token punctuation">,</span>\n        hide_cursor <span class="token operator">=</span> <span class="token keyword">true</span><span class="token punctuation">,</span>          <span class="token comment">-- Hide cursor while scrolling</span>\n        stop_eof <span class="token operator">=</span> <span class="token keyword">true</span><span class="token punctuation">,</span>             <span class="token comment">-- Stop at &lt;EOF&gt; when scrolling downwards</span>\n        use_local_scrolloff <span class="token operator">=</span> <span class="token keyword">false</span><span class="token punctuation">,</span> <span class="token comment">-- Use the local scope of scrolloff instead of the global scope</span>\n        respect_scrolloff <span class="token operator">=</span> <span class="token keyword">false</span><span class="token punctuation">,</span>   <span class="token comment">-- Stop scrolling when the cursor reaches the scrolloff margin of the file</span>\n        cursor_scrolls_alone <span class="token operator">=</span> <span class="token keyword">true</span><span class="token punctuation">,</span> <span class="token comment">-- The cursor will keep on scrolling even if the window cannot scroll further</span>\n        easing_function <span class="token operator">=</span> <span class="token keyword">nil</span><span class="token punctuation">,</span>        <span class="token comment">-- Default easing function</span>\n        pre_hook <span class="token operator">=</span> <span class="token keyword">nil</span><span class="token punctuation">,</span>              <span class="token comment">-- Function to run before the scrolling animation starts</span>\n        post_hook <span class="token operator">=</span> <span class="token keyword">nil</span><span class="token punctuation">,</span>              <span class="token comment">-- Function to run after the scrolling animation ends</span>\n        <span class="token punctuation">}</span><span class="token punctuation">)</span>\n  <span class="token keyword">end</span>\n<span class="token punctuation">}</span><span class="token punctuation">,</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br></div></div>',2),bt={id:"neuron",tabindex:"-1"},dt=(0,t._)("a",{class:"header-anchor",href:"#neuron","aria-hidden":"true"},"#",-1),gt=(0,t.Uk)(),ht={href:"https://github.com/oberblastmeister/neuron.nvim",target:"_blank",rel:"noopener noreferrer"},vt=(0,t.Uk)("neuron"),qt=(0,t.uE)('<p><strong>next generation note-taking</strong></p><div class="language-lua ext-lua line-numbers-mode"><pre class="language-lua"><code>\t<span class="token punctuation">{</span><span class="token string">&quot;oberblastmeister/neuron.nvim&quot;</span><span class="token punctuation">}</span><span class="token punctuation">,</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div>',2),ft={id:"nvim-lastplace",tabindex:"-1"},_t=(0,t._)("a",{class:"header-anchor",href:"#nvim-lastplace","aria-hidden":"true"},"#",-1),wt=(0,t.Uk)(),yt={href:"https://github.com/ethanholz/nvim-lastplace",target:"_blank",rel:"noopener noreferrer"},xt=(0,t.Uk)("nvim-lastplace"),Ut=(0,t.uE)('<p><strong>pick up where you left off</strong></p><div class="language-lua ext-lua line-numbers-mode"><pre class="language-lua"><code>\t<span class="token punctuation">{</span>\n\t\t<span class="token string">&quot;ethanholz/nvim-lastplace&quot;</span><span class="token punctuation">,</span>\n\t\tevent <span class="token operator">=</span> <span class="token string">&quot;BufRead&quot;</span><span class="token punctuation">,</span>\n\t\tconfig <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n\t\t\t<span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;nvim-lastplace&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setup</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n\t\t\t\tlastplace_ignore_buftype <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token string">&quot;quickfix&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;nofile&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;help&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>\n\t\t\t\tlastplace_ignore_filetype <span class="token operator">=</span> <span class="token punctuation">{</span>\n\t\t\t\t\t<span class="token string">&quot;gitcommit&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;gitrebase&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;svn&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;hgcommit&quot;</span><span class="token punctuation">,</span>\n\t\t\t\t<span class="token punctuation">}</span><span class="token punctuation">,</span>\n\t\t\t\tlastplace_open_folds <span class="token operator">=</span> <span class="token keyword">true</span><span class="token punctuation">,</span>\n\t\t\t<span class="token punctuation">}</span><span class="token punctuation">)</span>\n\t\t<span class="token keyword">end</span><span class="token punctuation">,</span>\n\t<span class="token punctuation">}</span><span class="token punctuation">,</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div>',2),Et={id:"persistence",tabindex:"-1"},Wt=(0,t._)("a",{class:"header-anchor",href:"#persistence","aria-hidden":"true"},"#",-1),Bt=(0,t.Uk)(),Rt={href:"https://github.com/folke/persistence.nvim",target:"_blank",rel:"noopener noreferrer"},zt=(0,t.Uk)("persistence"),Gt=(0,t.uE)('<p><strong>simple session management</strong></p><div class="language-lua ext-lua line-numbers-mode"><pre class="language-lua"><code><span class="token punctuation">{</span>\n  <span class="token string">&quot;folke/persistence.nvim&quot;</span><span class="token punctuation">,</span>\n    event <span class="token operator">=</span> <span class="token string">&quot;BufReadPre&quot;</span><span class="token punctuation">,</span> <span class="token comment">-- this will only start session saving when an actual file was opened</span>\n    module <span class="token operator">=</span> <span class="token string">&quot;persistence&quot;</span><span class="token punctuation">,</span>\n    config <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n      <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;persistence&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setup</span> <span class="token punctuation">{</span>\n        dir <span class="token operator">=</span> vim<span class="token punctuation">.</span>fn<span class="token punctuation">.</span><span class="token function">expand</span><span class="token punctuation">(</span>vim<span class="token punctuation">.</span>fn<span class="token punctuation">.</span>stdpath <span class="token string">&quot;config&quot;</span> <span class="token operator">..</span> <span class="token string">&quot;/session/&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n        options <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token string">&quot;buffers&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;curdir&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;tabpages&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;winsize&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span>\n  <span class="token keyword">end</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">,</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><p>Also define keybindings in your <code>config.lua</code></p><div class="language-lua ext-lua line-numbers-mode"><pre class="language-lua"><code>  lvim<span class="token punctuation">.</span>builtin<span class="token punctuation">.</span>which_key<span class="token punctuation">.</span>mappings<span class="token punctuation">[</span><span class="token string">&quot;S&quot;</span><span class="token punctuation">]</span><span class="token operator">=</span> <span class="token punctuation">{</span>\n    name <span class="token operator">=</span> <span class="token string">&quot;Session&quot;</span><span class="token punctuation">,</span>\n    c <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token string">&quot;&lt;cmd&gt;lua require(&#39;persistence&#39;).load()&lt;cr&gt;&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Restore last session for current dir&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    l <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token string">&quot;&lt;cmd&gt;lua require(&#39;persistence&#39;).load({ last = true })&lt;cr&gt;&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Restore last session&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    Q <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token string">&quot;&lt;cmd&gt;lua require(&#39;persistence&#39;).stop()&lt;cr&gt;&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Quit without saving session&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div>',4),Tt={id:"todo-comments-nvim",tabindex:"-1"},Ct=(0,t._)("a",{class:"header-anchor",href:"#todo-comments-nvim","aria-hidden":"true"},"#",-1),St=(0,t.Uk)(),Pt={href:"https://github.com/folke/todo-comments.nvim",target:"_blank",rel:"noopener noreferrer"},jt=(0,t.Uk)("todo-comments.nvim"),At=(0,t.uE)('<p><strong>highlight and search for todo comments</strong></p><div class="language-lua ext-lua line-numbers-mode"><pre class="language-lua"><code><span class="token punctuation">{</span>\n  <span class="token string">&quot;folke/todo-comments.nvim&quot;</span><span class="token punctuation">,</span>\n  event <span class="token operator">=</span> <span class="token string">&quot;BufRead&quot;</span><span class="token punctuation">,</span>\n  config <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n    <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;todo-comments&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setup</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n  <span class="token keyword">end</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">,</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div>',2),Lt={id:"vim-cursorword",tabindex:"-1"},Ft=(0,t._)("a",{class:"header-anchor",href:"#vim-cursorword","aria-hidden":"true"},"#",-1),Nt=(0,t.Uk)(),Ht={href:"https://github.com/itchyny/vim-cursorword",target:"_blank",rel:"noopener noreferrer"},Mt=(0,t.Uk)("vim-cursorword"),Vt=(0,t.uE)('<p><strong>underlines the word under the cursor</strong></p><div class="language-lua ext-lua line-numbers-mode"><pre class="language-lua"><code><span class="token punctuation">{</span>\n  <span class="token string">&quot;itchyny/vim-cursorword&quot;</span><span class="token punctuation">,</span>\n    event <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">&quot;BufEnter&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;BufNewFile&quot;</span><span class="token punctuation">}</span><span class="token punctuation">,</span>\n    config <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n      vim<span class="token punctuation">.</span>api<span class="token punctuation">.</span><span class="token function">nvim_command</span><span class="token punctuation">(</span><span class="token string">&quot;augroup user_plugin_cursorword&quot;</span><span class="token punctuation">)</span>\n      vim<span class="token punctuation">.</span>api<span class="token punctuation">.</span><span class="token function">nvim_command</span><span class="token punctuation">(</span><span class="token string">&quot;autocmd!&quot;</span><span class="token punctuation">)</span>\n      vim<span class="token punctuation">.</span>api<span class="token punctuation">.</span><span class="token function">nvim_command</span><span class="token punctuation">(</span><span class="token string">&quot;autocmd FileType NvimTree,lspsagafinder,dashboard,vista let b:cursorword = 0&quot;</span><span class="token punctuation">)</span>\n      vim<span class="token punctuation">.</span>api<span class="token punctuation">.</span><span class="token function">nvim_command</span><span class="token punctuation">(</span><span class="token string">&quot;autocmd WinEnter * if &amp;diff || &amp;pvw | let b:cursorword = 0 | endif&quot;</span><span class="token punctuation">)</span>\n      vim<span class="token punctuation">.</span>api<span class="token punctuation">.</span><span class="token function">nvim_command</span><span class="token punctuation">(</span><span class="token string">&quot;autocmd InsertEnter * let b:cursorword = 0&quot;</span><span class="token punctuation">)</span>\n      vim<span class="token punctuation">.</span>api<span class="token punctuation">.</span><span class="token function">nvim_command</span><span class="token punctuation">(</span><span class="token string">&quot;autocmd InsertLeave * let b:cursorword = 1&quot;</span><span class="token punctuation">)</span>\n      vim<span class="token punctuation">.</span>api<span class="token punctuation">.</span><span class="token function">nvim_command</span><span class="token punctuation">(</span><span class="token string">&quot;augroup END&quot;</span><span class="token punctuation">)</span>\n      <span class="token keyword">end</span>\n<span class="token punctuation">}</span><span class="token punctuation">,</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div>',2),It={id:"vim-repeat",tabindex:"-1"},Dt=(0,t._)("a",{class:"header-anchor",href:"#vim-repeat","aria-hidden":"true"},"#",-1),Ot=(0,t.Uk)(),Yt={href:"https://github.com/tpope/vim-repeat",target:"_blank",rel:"noopener noreferrer"},Jt=(0,t.Uk)("vim-repeat"),Kt=(0,t.uE)('<p><strong>enable repeating supported plugin maps with &quot;.&quot;</strong></p><div class="language-lua ext-lua line-numbers-mode"><pre class="language-lua"><code><span class="token punctuation">{</span> <span class="token string">&quot;tpope/vim-repeat&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div>',2),Qt={id:"vim-sanegx",tabindex:"-1"},Zt=(0,t._)("a",{class:"header-anchor",href:"#vim-sanegx","aria-hidden":"true"},"#",-1),Xt=(0,t.Uk)(),$t={href:"https://github.com/felipec/vim-sanegx",target:"_blank",rel:"noopener noreferrer"},ne=(0,t.Uk)("vim-sanegx"),se=(0,t.uE)('<p><strong>open url with <code>gx</code></strong></p><div class="language-lua ext-lua line-numbers-mode"><pre class="language-lua"><code><span class="token punctuation">{</span>\n  <span class="token string">&quot;felipec/vim-sanegx&quot;</span><span class="token punctuation">,</span>\n  event <span class="token operator">=</span> <span class="token string">&quot;BufRead&quot;</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">,</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div>',2),ae={id:"vim-surround",tabindex:"-1"},te=(0,t._)("a",{class:"header-anchor",href:"#vim-surround","aria-hidden":"true"},"#",-1),ee=(0,t.Uk)(),pe={href:"https://github.com/tpope/vim-surround",target:"_blank",rel:"noopener noreferrer"},oe=(0,t.Uk)("vim-surround"),le=(0,t.uE)('<p><strong>mappings to delete, change and add surroundings</strong></p><div class="language-lua ext-lua line-numbers-mode"><pre class="language-lua"><code><span class="token punctuation">{</span>\n  <span class="token string">&quot;tpope/vim-surround&quot;</span><span class="token punctuation">,</span>\n  keys <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">&quot;c&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;d&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;y&quot;</span><span class="token punctuation">}</span>\n<span class="token punctuation">}</span><span class="token punctuation">,</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div>',2),ce={id:"vim-wakatime",tabindex:"-1"},ue=(0,t._)("a",{class:"header-anchor",href:"#vim-wakatime","aria-hidden":"true"},"#",-1),re=(0,t.Uk)(),ie={href:"https://github.com/wakatime/vim-wakatime",target:"_blank",rel:"noopener noreferrer"},ke=(0,t.Uk)("vim-wakatime"),me=(0,t.uE)('<p><strong>metrics, insights, and time tracking automatically generated from your programming activity</strong></p><div class="language-lua ext-lua line-numbers-mode"><pre class="language-lua"><code><span class="token punctuation">{</span>\n  <span class="token string">&quot;wakatime/vim-wakatime&quot;</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>Once installed and synced, add your WakaTime API Key via <code>:WakaTimeApiKey</code> command</p><h2 id="language-specific" tabindex="-1"><a class="header-anchor" href="#language-specific" aria-hidden="true">#</a> Language specific</h2>',4),be={id:"bracey",tabindex:"-1"},de=(0,t._)("a",{class:"header-anchor",href:"#bracey","aria-hidden":"true"},"#",-1),ge=(0,t.Uk)(),he={href:"https://github.com/turbio/bracey.vim",target:"_blank",rel:"noopener noreferrer"},ve=(0,t.Uk)("bracey"),qe=(0,t.uE)('<p><strong>live edit html, css, and javascript</strong></p><div class="language-lua ext-lua line-numbers-mode"><pre class="language-lua"><code><span class="token punctuation">{</span>\n  <span class="token string">&quot;turbio/bracey.vim&quot;</span><span class="token punctuation">,</span>\n  cmd <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">&quot;Bracey&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;BracyStop&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;BraceyReload&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;BraceyEval&quot;</span><span class="token punctuation">}</span><span class="token punctuation">,</span>\n  run <span class="token operator">=</span> <span class="token string">&quot;npm install --prefix server&quot;</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">,</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div>',2),fe={id:"vim-bundler",tabindex:"-1"},_e=(0,t._)("a",{class:"header-anchor",href:"#vim-bundler","aria-hidden":"true"},"#",-1),we=(0,t.Uk)(),ye={href:"https://github.com/tpope/vim-bundler",target:"_blank",rel:"noopener noreferrer"},xe=(0,t.Uk)("vim-bundler"),Ue=(0,t.uE)('<p><strong>lightweight support for ruby&#39;s bundler</strong></p><div class="language-lua ext-lua line-numbers-mode"><pre class="language-lua"><code><span class="token punctuation">{</span>\n  <span class="token string">&quot;tpope/vim-bundler&quot;</span><span class="token punctuation">,</span>\n  cmd <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">&quot;Bundler&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Bopen&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Bsplit&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Btabedit&quot;</span><span class="token punctuation">}</span>\n<span class="token punctuation">}</span><span class="token punctuation">,</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div>',2),Ee={id:"vim-rails",tabindex:"-1"},We=(0,t._)("a",{class:"header-anchor",href:"#vim-rails","aria-hidden":"true"},"#",-1),Be=(0,t.Uk)(),Re={href:"https://github.com/tpope/vim-rails",target:"_blank",rel:"noopener noreferrer"},ze=(0,t.Uk)("vim-rails"),Ge=(0,t.uE)('<p><strong>edit ruby on rails applications</strong></p><div class="language-lua ext-lua line-numbers-mode"><pre class="language-lua"><code><span class="token punctuation">{</span>\n  <span class="token string">&quot;tpope/vim-rails&quot;</span><span class="token punctuation">,</span>\n  cmd <span class="token operator">=</span> <span class="token punctuation">{</span>\n    <span class="token string">&quot;Eview&quot;</span><span class="token punctuation">,</span>\n    <span class="token string">&quot;Econtroller&quot;</span><span class="token punctuation">,</span>\n    <span class="token string">&quot;Emodel&quot;</span><span class="token punctuation">,</span>\n    <span class="token string">&quot;Smodel&quot;</span><span class="token punctuation">,</span>\n    <span class="token string">&quot;Sview&quot;</span><span class="token punctuation">,</span>\n    <span class="token string">&quot;Scontroller&quot;</span><span class="token punctuation">,</span>\n    <span class="token string">&quot;Vmodel&quot;</span><span class="token punctuation">,</span>\n    <span class="token string">&quot;Vview&quot;</span><span class="token punctuation">,</span>\n    <span class="token string">&quot;Vcontroller&quot;</span><span class="token punctuation">,</span>\n    <span class="token string">&quot;Tmodel&quot;</span><span class="token punctuation">,</span>\n    <span class="token string">&quot;Tview&quot;</span><span class="token punctuation">,</span>\n    <span class="token string">&quot;Tcontroller&quot;</span><span class="token punctuation">,</span>\n    <span class="token string">&quot;Rails&quot;</span><span class="token punctuation">,</span>\n    <span class="token string">&quot;Generate&quot;</span><span class="token punctuation">,</span>\n    <span class="token string">&quot;Runner&quot;</span><span class="token punctuation">,</span>\n    <span class="token string">&quot;Extract&quot;</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span><span class="token punctuation">,</span>\n\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br></div></div>',2),Te={},Ce=(0,a(3744).Z)(Te,[["render",function(n,s){const a=(0,t.up)("OutboundLink");return(0,t.wg)(),(0,t.iD)(t.HY,null,[e,p,o,(0,t._)("h3",l,[c,u,(0,t._)("a",r,[i,(0,t.Wm)(a)])]),k,(0,t._)("h3",m,[b,d,(0,t._)("a",g,[h,(0,t.Wm)(a)])]),v,(0,t._)("h3",q,[f,_,(0,t._)("a",w,[y,(0,t.Wm)(a)])]),x,(0,t._)("h3",U,[E,W,(0,t._)("a",B,[R,(0,t.Wm)(a)])]),z,(0,t._)("h3",G,[T,C,(0,t._)("a",S,[P,(0,t.Wm)(a)])]),j,(0,t._)("h3",A,[L,F,(0,t._)("a",N,[H,(0,t.Wm)(a)])]),M,(0,t._)("h3",V,[I,D,(0,t._)("a",O,[Y,(0,t.Wm)(a)])]),J,(0,t._)("h3",K,[Q,Z,(0,t._)("a",X,[$,(0,t.Wm)(a)])]),nn,(0,t._)("h3",sn,[an,tn,(0,t._)("a",en,[pn,(0,t.Wm)(a)])]),on,(0,t._)("h3",ln,[cn,un,(0,t._)("a",rn,[kn,(0,t.Wm)(a)])]),mn,(0,t._)("h3",bn,[dn,gn,(0,t._)("a",hn,[vn,(0,t.Wm)(a)])]),qn,(0,t._)("h3",fn,[_n,wn,(0,t._)("a",yn,[xn,(0,t.Wm)(a)])]),Un,(0,t._)("h3",En,[Wn,Bn,(0,t._)("a",Rn,[zn,(0,t.Wm)(a)])]),Gn,(0,t._)("h3",Tn,[Cn,Sn,(0,t._)("a",Pn,[jn,(0,t.Wm)(a)])]),An,(0,t._)("h3",Ln,[Fn,Nn,(0,t._)("a",Hn,[Mn,(0,t.Wm)(a)])]),Vn,(0,t._)("h3",In,[Dn,On,(0,t._)("a",Yn,[Jn,(0,t.Wm)(a)])]),Kn,(0,t._)("h3",Qn,[Zn,Xn,(0,t._)("a",$n,[ns,(0,t.Wm)(a)])]),ss,(0,t._)("h3",as,[ts,es,(0,t._)("a",ps,[os,(0,t.Wm)(a)])]),ls,(0,t._)("h3",cs,[us,rs,(0,t._)("a",is,[ks,(0,t.Wm)(a)])]),ms,(0,t._)("h3",bs,[ds,gs,(0,t._)("a",hs,[vs,(0,t.Wm)(a)])]),qs,(0,t._)("h3",fs,[_s,ws,(0,t._)("a",ys,[xs,(0,t.Wm)(a)])]),Us,(0,t._)("h3",Es,[Ws,Bs,(0,t._)("a",Rs,[zs,(0,t.Wm)(a)])]),Gs,(0,t._)("h3",Ts,[Cs,Ss,(0,t._)("a",Ps,[js,(0,t.Wm)(a)])]),As,(0,t._)("h3",Ls,[Fs,Ns,(0,t._)("a",Hs,[Ms,(0,t.Wm)(a)])]),Vs,(0,t._)("h3",Is,[Ds,Os,(0,t._)("a",Ys,[Js,(0,t.Wm)(a)])]),Ks,(0,t._)("h3",Qs,[Zs,Xs,(0,t._)("a",$s,[na,(0,t.Wm)(a)])]),sa,(0,t._)("h3",aa,[ta,ea,(0,t._)("a",pa,[oa,(0,t.Wm)(a)])]),la,(0,t._)("h3",ca,[ua,ra,(0,t._)("a",ia,[ka,(0,t.Wm)(a)])]),ma,(0,t._)("h3",ba,[da,ga,(0,t._)("a",ha,[va,(0,t.Wm)(a)])]),qa,(0,t._)("h3",fa,[_a,wa,(0,t._)("a",ya,[xa,(0,t.Wm)(a)])]),Ua,(0,t._)("h3",Ea,[Wa,Ba,(0,t._)("a",Ra,[za,(0,t.Wm)(a)])]),Ga,(0,t._)("h3",Ta,[Ca,Sa,(0,t._)("a",Pa,[ja,(0,t.Wm)(a)])]),Aa,(0,t._)("h3",La,[Fa,Na,(0,t._)("a",Ha,[Ma,(0,t.Wm)(a)])]),Va,(0,t._)("h3",Ia,[Da,Oa,(0,t._)("a",Ya,[Ja,(0,t.Wm)(a)])]),Ka,(0,t._)("h3",Qa,[Za,Xa,(0,t._)("a",$a,[nt,(0,t.Wm)(a)])]),st,(0,t._)("h3",at,[tt,et,(0,t._)("a",pt,[ot,(0,t.Wm)(a)])]),lt,(0,t._)("h3",ct,[ut,rt,(0,t._)("a",it,[kt,(0,t.Wm)(a)])]),mt,(0,t._)("h3",bt,[dt,gt,(0,t._)("a",ht,[vt,(0,t.Wm)(a)])]),qt,(0,t._)("h3",ft,[_t,wt,(0,t._)("a",yt,[xt,(0,t.Wm)(a)])]),Ut,(0,t._)("h3",Et,[Wt,Bt,(0,t._)("a",Rt,[zt,(0,t.Wm)(a)])]),Gt,(0,t._)("h3",Tt,[Ct,St,(0,t._)("a",Pt,[jt,(0,t.Wm)(a)])]),At,(0,t._)("h3",Lt,[Ft,Nt,(0,t._)("a",Ht,[Mt,(0,t.Wm)(a)])]),Vt,(0,t._)("h3",It,[Dt,Ot,(0,t._)("a",Yt,[Jt,(0,t.Wm)(a)])]),Kt,(0,t._)("h3",Qt,[Zt,Xt,(0,t._)("a",$t,[ne,(0,t.Wm)(a)])]),se,(0,t._)("h3",ae,[te,ee,(0,t._)("a",pe,[oe,(0,t.Wm)(a)])]),le,(0,t._)("h3",ce,[ue,re,(0,t._)("a",ie,[ke,(0,t.Wm)(a)])]),me,(0,t._)("h3",be,[de,ge,(0,t._)("a",he,[ve,(0,t.Wm)(a)])]),qe,(0,t._)("h3",fe,[_e,we,(0,t._)("a",ye,[xe,(0,t.Wm)(a)])]),Ue,(0,t._)("h3",Ee,[We,Be,(0,t._)("a",Re,[ze,(0,t.Wm)(a)])]),Ge],64)}]])},3744:(n,s)=>{s.Z=(n,s)=>{for(const[a,t]of s)n[a]=t;return n}}}]);