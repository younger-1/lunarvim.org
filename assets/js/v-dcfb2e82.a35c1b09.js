"use strict";(self.webpackChunkLunarVim_com=self.webpackChunkLunarVim_com||[]).push([[4483],{5943:(a,n,s)=>{s.r(n),s.d(n,{data:()=>t});const t={key:"v-dcfb2e82",path:"/languages/javascript.html",title:"JavaScript",lang:"en-US",frontmatter:{},excerpt:"",headers:[{level:2,title:"Install Syntax Highlighting",slug:"install-syntax-highlighting",children:[]},{level:2,title:"Install Language Server",slug:"install-language-server",children:[]},{level:2,title:"Formatters",slug:"formatters",children:[]},{level:2,title:"Linters",slug:"linters",children:[]},{level:2,title:"LSP Settings",slug:"lsp-settings",children:[]},{level:2,title:"Debugger",slug:"debugger",children:[]}],filePathRelative:"languages/javascript.md",git:{updatedTime:1628713649e3,contributors:[{name:"Pasi Bergman",email:"pasi.bergman@iki.fi",commits:3},{name:"christianchiarulli",email:"chrisatmachine@gmail.com",commits:3}]}}},4005:(a,n,s)=>{s.r(n),s.d(n,{default:()=>h});var t=s(6252);const e=(0,t.uE)('<h1 id="javascript" tabindex="-1"><a class="header-anchor" href="#javascript" aria-hidden="true">#</a> JavaScript</h1><h2 id="install-syntax-highlighting" tabindex="-1"><a class="header-anchor" href="#install-syntax-highlighting" aria-hidden="true">#</a> Install Syntax Highlighting</h2><div class="language-vim ext-vim line-numbers-mode"><pre class="language-vim"><code><span class="token punctuation">:</span>TSInstall javascript\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><h2 id="install-language-server" tabindex="-1"><a class="header-anchor" href="#install-language-server" aria-hidden="true">#</a> Install Language Server</h2>',4),l=(0,t.Uk)("JavaScript uses "),i=(0,t.Uk)("TypeScript"),p=(0,t.Uk)(" language server."),o=(0,t.uE)('<h2 id="formatters" tabindex="-1"><a class="header-anchor" href="#formatters" aria-hidden="true">#</a> Formatters</h2><p>The configured formatter(s) must be installed separately.</p><p>Configuration in <code>~/.config/lvim/config.lua</code>:</p><div class="language-lua ext-lua line-numbers-mode"><pre class="language-lua"><code><span class="token comment">-- exe value can be &quot;prettier&quot;, &quot;prettierd&quot;, &quot;eslint&quot;, or &quot;eslint_d&quot;</span>\nlvim<span class="token punctuation">.</span>lang<span class="token punctuation">.</span>javascript<span class="token punctuation">.</span>formatters <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token punctuation">{</span> exe <span class="token operator">=</span> <span class="token string">&quot;prettier&quot;</span> <span class="token punctuation">}</span> <span class="token punctuation">}</span>\nlvim<span class="token punctuation">.</span>lang<span class="token punctuation">.</span>javascriptreact<span class="token punctuation">.</span>formatters <span class="token operator">=</span> lvim<span class="token punctuation">.</span>lang<span class="token punctuation">.</span>javascript<span class="token punctuation">.</span>formatters\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>Also combination of some prettier and eslint can be specified:</p><div class="language-lua ext-lua line-numbers-mode"><pre class="language-lua"><code><span class="token comment">-- exe value can be &quot;prettier&quot;, &quot;prettierd&quot;, &quot;eslint&quot;, or &quot;eslint_d&quot;</span>\nlvim<span class="token punctuation">.</span>lang<span class="token punctuation">.</span>javascript<span class="token punctuation">.</span>formatters <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token punctuation">{</span> exe <span class="token operator">=</span> <span class="token string">&quot;eslint&quot;</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> exe <span class="token operator">=</span> <span class="token string">&quot;prettier&quot;</span> <span class="token punctuation">}</span> <span class="token punctuation">}</span>\nlvim<span class="token punctuation">.</span>lang<span class="token punctuation">.</span>javascriptreact<span class="token punctuation">.</span>formatters <span class="token operator">=</span> lvim<span class="token punctuation">.</span>lang<span class="token punctuation">.</span>javascript<span class="token punctuation">.</span>formatters\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>With <code>eslint</code> and <code>eslint_d</code>, the <code>--fix</code> functionality is used for formatting.</p><h2 id="linters" tabindex="-1"><a class="header-anchor" href="#linters" aria-hidden="true">#</a> Linters</h2><p>The configured linter must be installed separately.</p><p>Configuration in <code>~/.config/lvim/config.lua</code>:</p><div class="language-lua ext-lua line-numbers-mode"><pre class="language-lua"><code><span class="token comment">-- exe value can be &quot;eslint&quot; or &quot;eslint_d&quot;</span>\nlvim<span class="token punctuation">.</span>lang<span class="token punctuation">.</span>javascript<span class="token punctuation">.</span>linters <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token punctuation">{</span> exe <span class="token operator">=</span> <span class="token string">&quot;eslint&quot;</span> <span class="token punctuation">}</span> <span class="token punctuation">}</span>\nlvim<span class="token punctuation">.</span>lang<span class="token punctuation">.</span>javascriptreact<span class="token punctuation">.</span>linters <span class="token operator">=</span> lvim<span class="token punctuation">.</span>lang<span class="token punctuation">.</span>javascript<span class="token punctuation">.</span>linters\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h2 id="lsp-settings" tabindex="-1"><a class="header-anchor" href="#lsp-settings" aria-hidden="true">#</a> LSP Settings</h2>',12),r=(0,t.Uk)("More information in "),c=(0,t.Uk)("TypeScript"),u=(0,t.Uk)("."),d=(0,t._)("h2",{id:"debugger",tabindex:"-1"},[(0,t._)("a",{class:"header-anchor",href:"#debugger","aria-hidden":"true"},"#"),(0,t.Uk)(" Debugger")],-1),g=(0,t._)("p",null,"(TODO)",-1),m={},h=(0,s(3744).Z)(m,[["render",function(a,n){const s=(0,t.up)("RouterLink");return(0,t.wg)(),(0,t.iD)(t.HY,null,[e,(0,t._)("p",null,[l,(0,t.Wm)(s,{to:"/languages/typescript.html#install-language-server"},{default:(0,t.w5)((()=>[i])),_:1}),p]),o,(0,t._)("p",null,[r,(0,t.Wm)(s,{to:"/languages/typescript.html#lsp-settings"},{default:(0,t.w5)((()=>[c])),_:1}),u]),d,g],64)}]])},3744:(a,n)=>{n.Z=(a,n)=>{for(const[s,t]of n)a[s]=t;return a}}}]);