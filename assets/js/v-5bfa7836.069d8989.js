"use strict";(self.webpackChunkLunarVim_com=self.webpackChunkLunarVim_com||[]).push([[1],{8350:(n,e,a)=>{a.r(e),a.d(e,{data:()=>s});const s={key:"v-5bfa7836",path:"/drafts/manual-procedures.html",title:"Install",lang:"en-US",frontmatter:{},excerpt:"",headers:[{level:2,title:"Prepare",slug:"prepare",children:[{level:3,title:"Install the neovim (>= v0.5.0) and git packages",slug:"install-the-neovim-v0-5-0-and-git-packages",children:[]},{level:3,title:"Install pip",slug:"install-pip",children:[]},{level:3,title:"Install fnm or another node version manager",slug:"install-fnm-or-another-node-version-manager",children:[]},{level:3,title:"Install nodejs and npm",slug:"install-nodejs-and-npm",children:[]},{level:3,title:"Prepare PATH for neovim-remote",slug:"prepare-path-for-neovim-remote",children:[]}]},{level:2,title:"Run one of the following commands",slug:"run-one-of-the-following-commands",children:[{level:3,title:"Stable (master branch)",slug:"stable-master-branch",children:[]},{level:3,title:"Unstable (rolling branch)",slug:"unstable-rolling-branch",children:[]}]},{level:2,title:"Troubleshooting installation problems",slug:"troubleshooting-installation-problems",children:[]},{level:2,title:"Uninstall",slug:"uninstall",children:[]},{level:2,title:"Manual Install",slug:"manual-install",children:[]}],filePathRelative:"drafts/manual-procedures.md",git:{updatedTime:1628285347e3,contributors:[{name:"jamessouth",email:"jamesdanielsouth@gmail.com",commits:2}]}}},3988:(n,e,a)=>{a.r(e),a.d(e,{default:()=>on});var s=a(6252);const l=(0,s._)("h1",{id:"install",tabindex:"-1"},[(0,s._)("a",{class:"header-anchor",href:"#install","aria-hidden":"true"},"#"),(0,s.Uk)(" Install")],-1),t=(0,s._)("p",null,[(0,s.Uk)("If you already have an "),(0,s._)("code",null,"nvim"),(0,s.Uk)(" directory under "),(0,s._)("code",null,"~/.config"),(0,s.Uk)(", don't worry, LunarVim will not overwrite it. Your LunarVim config will be located in "),(0,s._)("code",null,"~/.config/lvim"),(0,s.Uk)(".")],-1),o=(0,s.Uk)("If you want to update an existing LunarVim install, follow the procedures "),i=(0,s.Uk)("here"),r=(0,s.Uk)(". If you run the following install script with an existing "),c=(0,s._)("code",null,"~/.local/share/lunarvim",-1),p=(0,s.Uk)(" directory, the script will exit and ask you to move it (e.g. "),d=(0,s._)("code",null,"mv /old /new",-1),u=(0,s.Uk)(")."),m=(0,s._)("h2",{id:"prepare",tabindex:"-1"},[(0,s._)("a",{class:"header-anchor",href:"#prepare","aria-hidden":"true"},"#"),(0,s.Uk)(" Prepare")],-1),h=(0,s._)("h3",{id:"install-the-neovim-v0-5-0-and-git-packages",tabindex:"-1"},[(0,s._)("a",{class:"header-anchor",href:"#install-the-neovim-v0-5-0-and-git-packages","aria-hidden":"true"},"#"),(0,s.Uk)(" Install the "),(0,s._)("code",null,"neovim"),(0,s.Uk)(" (>= v0.5.0) and "),(0,s._)("code",null,"git"),(0,s.Uk)(" packages")],-1),b=(0,s.Uk)("If you want to compile "),g=(0,s._)("code",null,"neovim",-1),v=(0,s.Uk)(" from source and install, see "),f=(0,s.Uk)("here"),k=(0,s.Uk)("."),y=(0,s.uE)('<h3 id="install-pip" tabindex="-1"><a class="header-anchor" href="#install-pip" aria-hidden="true">#</a> Install <code>pip</code></h3><table><thead><tr><th>OS</th><th>Command</th></tr></thead><tbody><tr><td>Mac</td><td>sudo curl https://bootstrap.pypa.io/get-pip.py -o get-pip.py</td></tr><tr><td></td><td>python3 get-pip.py</td></tr><tr><td></td><td>rm get-pip.py</td></tr><tr><td>Ubuntu</td><td>sudo apt install python3-pip &gt;/dev/null</td></tr><tr><td>Arch</td><td>sudo pacman -S python-pip</td></tr><tr><td>Fedora</td><td>sudo dnf install -y pip &gt;/dev/null</td></tr><tr><td>Gentoo</td><td>sudo emerge -avn dev-python/pip</td></tr><tr><td>Termux</td><td>apt install python</td></tr></tbody></table>',2),w={id:"install-fnm-or-another-node-version-manager",tabindex:"-1"},U=(0,s._)("a",{class:"header-anchor",href:"#install-fnm-or-another-node-version-manager","aria-hidden":"true"},"#",-1),_=(0,s.Uk)(" Install "),x={href:"https://github.com/Schniz/fnm",target:"_blank",rel:"noopener noreferrer"},I=(0,s.Uk)("fnm"),j=(0,s.Uk)(" or another "),L={href:"https://docs.npmjs.com/resolving-eacces-permissions-errors-when-installing-packages-globally",target:"_blank",rel:"noopener noreferrer"},S=(0,s.Uk)("node version manager"),T=(0,s.uE)("LunarVim requires a globally-installed <code>npm</code> package called <code>tree-sitter-cli</code>. Installing global <code>npm</code> packages on Linux is not always straightforward, so we recommend using a node version manager (hereafter, nvm) to handle your <code>nodejs</code> and <code>npm</code> versions. You can use an nvm in conjunction with your distribution&#39;s official <code>nodejs</code> and <code>npm</code> packages, but you may find it simpler to just use an nvm by itself and not install <code>nodejs</code> and <code>npm</code> through your package manager at all. We recommend an ",19),V={href:"https://www.youtube.com/watch?v=ClrXIi8qTtI",target:"_blank",rel:"noopener noreferrer"},P=(0,s.Uk)("nvm called fnm"),A=(0,s.Uk)(". Users who do not use an nvm to install global "),W=(0,s._)("code",null,"npm",-1),C=(0,s.Uk)(" packages may get an error when the LunarVim install script runs."),z=(0,s.uE)('<h3 id="install-nodejs-and-npm" tabindex="-1"><a class="header-anchor" href="#install-nodejs-and-npm" aria-hidden="true">#</a> Install <code>nodejs</code> and <code>npm</code></h3><p>Your nvm will have a way to install versions of <code>nodejs</code> and <code>npm</code>. With <code>fnm</code> the command to install the LTS version of <code>nodejs</code> (which will include <code>npm</code>) is <code>fnm install --lts</code>. After installing <code>nodejs</code> you should not have any difficulty globally-installing <code>npm</code> packages.</p><h3 id="prepare-path-for-neovim-remote" tabindex="-1"><a class="header-anchor" href="#prepare-path-for-neovim-remote" aria-hidden="true">#</a> Prepare PATH for <code>neovim-remote</code></h3><p>LunarVim also requires a python package called <code>neovim-remote</code>. Upon installation, it will warn that it needs to be added to your PATH environment variable. Add this line to your <code>.bashrc</code> or other shell config file to prevent the warning:</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token builtin class-name">export</span> <span class="token assign-left variable"><span class="token environment constant">PATH</span></span><span class="token operator">=</span>/home/<span class="token environment constant">$USER</span>/.local/bin:<span class="token environment constant">$PATH</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>Close and reopen your shell window or run <code>source ~/.bashrc</code> (or other shell config file) to effectuate the changes.</p><p>With the manual prep out of the way, we are ready to install LunarVim!</p><h2 id="run-one-of-the-following-commands" tabindex="-1"><a class="header-anchor" href="#run-one-of-the-following-commands" aria-hidden="true">#</a> Run one of the following commands</h2><h3 id="stable-master-branch" tabindex="-1"><a class="header-anchor" href="#stable-master-branch" aria-hidden="true">#</a> Stable (master branch)</h3><p>No alarms and no surprises:</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">bash</span> <span class="token operator">&lt;</span><span class="token punctuation">(</span><span class="token function">curl</span> -s https://raw.githubusercontent.com/lunarvim/lunarvim/master/utils/installer/install.sh<span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><h3 id="unstable-rolling-branch" tabindex="-1"><a class="header-anchor" href="#unstable-rolling-branch" aria-hidden="true">#</a> Unstable (rolling branch)</h3><p>All the new features with all the new bugs:</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token assign-left variable">LVBRANCH</span><span class="token operator">=</span>rolling <span class="token function">bash</span> <span class="token operator">&lt;</span><span class="token punctuation">(</span><span class="token function">curl</span> -s https://raw.githubusercontent.com/lunarvim/lunarvim/rolling/utils/installer/install.sh<span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div>',14),E=(0,s.Uk)("That's it! Please continue on to "),M=(0,s.Uk)("Quick Start"),R=(0,s.Uk)("!"),H=(0,s.uE)('<h2 id="troubleshooting-installation-problems" tabindex="-1"><a class="header-anchor" href="#troubleshooting-installation-problems" aria-hidden="true">#</a> Troubleshooting installation problems</h2><p>If you encounter problems with the installation check the following:</p><ol><li><p>Make sure you have at least version 0.5.0 of <code>neovim</code>. There were some breaking changes in the development of 0.5.0 so upgrade to the newest available version to rule out incompatibilities.</p></li><li><p>Make sure <code>neovim</code> was compiled with <code>luajit</code>:</p></li></ol><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token comment"># The output of version information should include a line for: LuaJIT </span>\nnvim -v\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div>',4),Y={start:"3"},q=(0,s.Uk)("Make sure all the dependencies listed in "),B=(0,s.Uk)("Manual Install"),N=(0,s.Uk)(" are actually installed on your system. Your distribution's package manager will have a way to inspect what you have installed."),O=(0,s.Uk)("Make sure you have followed the procedures in "),D=(0,s.Uk)("Quick Start"),F=(0,s.Uk)(" to install and update your plugins."),G=(0,s._)("li",null,[(0,s._)("p",null,[(0,s.Uk)("If you're upgrading your install, sometimes an old "),(0,s._)("code",null,"packer"),(0,s.Uk)(" compiled file can cause errors at runtime. Remove the plugin folder with "),(0,s._)("code",null,"rm -rf ~/.config/lvim/plugin"),(0,s.Uk)(" and run "),(0,s._)("code",null,":PackerSync"),(0,s.Uk)(".")])],-1),Q=(0,s.Uk)("If you got an EACCES "),X=(0,s._)("code",null,"npm",-1),Z=(0,s.Uk)(" error you need to be sure you can install global "),$=(0,s._)("code",null,"npm",-1),J=(0,s.Uk)(" packages without "),K=(0,s._)("code",null,"sudo",-1),nn=(0,s.Uk)(" as described "),en={href:"https://docs.npmjs.com/resolving-eacces-permissions-errors-when-installing-packages-globally",target:"_blank",rel:"noopener noreferrer"},an=(0,s.Uk)("here"),sn=(0,s.Uk)("."),ln=(0,s.uE)('<h2 id="uninstall" tabindex="-1"><a class="header-anchor" href="#uninstall" aria-hidden="true">#</a> Uninstall</h2><p>You can remove LunarVim entirely (while preserving <code>neovim</code>) by running the following commands:</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">rm</span> -rf ~/.local/share/lunarvim\n\n<span class="token function">sudo</span> <span class="token function">rm</span> /usr/local/bin/lvim\n\n<span class="token function">rm</span> -rf ~/.local/share/applications/lvim.desktop\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h2 id="manual-install" tabindex="-1"><a class="header-anchor" href="#manual-install" aria-hidden="true">#</a> Manual Install</h2><p>Install <code>xclip</code>, <code>python3</code>, <code>ripgrep</code> and <code>fzf</code> with the package manager for your distribution:</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token comment"># Ubuntu</span>\n<span class="token function">sudo</span> <span class="token function">apt</span> <span class="token function">install</span> xclip ripgrep fzf libjpeg8-dev zlib1g-dev python-dev python3-dev libxtst-dev\n\n<span class="token comment"># Arch</span>\n<span class="token function">sudo</span> pacman -S xclip python ripgrep fzf \n\n<span class="token comment"># Fedora</span>\n<span class="token function">sudo</span> dnf groupinstall <span class="token string">&quot;X Software Development&quot;</span>\n<span class="token function">sudo</span> dnf <span class="token function">install</span> -y xclip python3-devel ripgrep fzf\npip3 <span class="token function">install</span> wheel \n\n<span class="token comment"># Gentoo</span>\n<span class="token function">sudo</span> emerge -avn sys-apps/ripgrep app-shells/fzf app-misc/dev-python/neovim-remote virtual/jpeg sys-libs/zlib\n<span class="token comment"># Optional.   Enable npm USE flag with flaggie</span>\n<span class="token function">sudo</span> flaggie net-libs/nodejs +npm\n<span class="token function">sudo</span> emerge -avnN net-libs/nodejs\n\n<span class="token comment"># Mac</span>\nbrew <span class="token function">install</span> lua ripgrep fzf \n\n<span class="token comment"># Termux</span>\n<span class="token function">sudo</span> <span class="token function">apt</span> <span class="token function">install</span> ripgrep fzf xclip python\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br></div></div><p>Install the <code>neovim</code> and <code>tree-sitter-cli</code> packages globally with <code>npm</code>:</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">npm</span> <span class="token function">install</span> -g neovim tree-sitter-cli\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>Install the <code>neovim</code>, <code>neovim-remote</code> and <code>pynvim</code> packages with <code>pip3</code>:</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>pip3 <span class="token function">install</span> neovim neovim-remote pynvim --user\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>Clone plugins:</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">mkdir</span> -p ~/.local/share/lunarvim/site/pack/packer/start/\n<span class="token builtin class-name">cd</span> ~/.local/share/lunarvim/site/pack/packer/start/\n<span class="token function">git</span> clone https://github.com/wbthomason/packer.nvim.git\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>Clone LunarVim:</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token comment">#Rolling Branch</span>\n<span class="token function">git</span> clone --branch rolling https://github.com/LunarVim/lunarvim.git ~/.local/share/lunarvim/lvim\n\n<span class="token comment">#Stable Branch</span>\n<span class="token function">git</span> clone --branch master https://github.com/LunarVim/lunarvim.git ~/.local/share/lunarvim/lvim\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p>Create your configuration file:</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">mkdir</span> -p ~/.config/lvim\n<span class="token function">cp</span> ~/.local/share/lunarvim/lvim/utils/installer/config.example.lua ~/.config/lvim/config.lua\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>Install plugins</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token comment">#launch LunarVim</span>\nlvim\n\n<span class="token comment"># Type this command</span>\n:PackerSync\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div>',18),tn={},on=(0,a(3744).Z)(tn,[["render",function(n,e){const a=(0,s.up)("RouterLink"),tn=(0,s.up)("OutboundLink");return(0,s.wg)(),(0,s.iD)(s.HY,null,[l,t,(0,s._)("p",null,[o,(0,s.Wm)(a,{to:"/drafts/03-updating.html"},{default:(0,s.w5)((()=>[i])),_:1}),r,c,p,d,u]),m,h,(0,s._)("p",null,[b,g,v,(0,s.Wm)(a,{to:"/drafts/dev/#compiling-neovim-from-source"},{default:(0,s.w5)((()=>[f])),_:1}),k]),y,(0,s._)("h3",w,[U,_,(0,s._)("a",x,[I,(0,s.Wm)(tn)]),j,(0,s._)("a",L,[S,(0,s.Wm)(tn)])]),(0,s._)("p",null,[T,(0,s._)("a",V,[P,(0,s.Wm)(tn)]),A,W,C]),z,(0,s._)("p",null,[E,(0,s.Wm)(a,{to:"/drafts/02-after-install.html"},{default:(0,s.w5)((()=>[M])),_:1}),R]),H,(0,s._)("ol",Y,[(0,s._)("li",null,[(0,s._)("p",null,[q,(0,s.Wm)(a,{to:"/drafts/dev/#manual-install"},{default:(0,s.w5)((()=>[B])),_:1}),N])]),(0,s._)("li",null,[(0,s._)("p",null,[O,(0,s.Wm)(a,{to:"/drafts/02-after-install.html"},{default:(0,s.w5)((()=>[D])),_:1}),F])]),G,(0,s._)("li",null,[(0,s._)("p",null,[Q,X,Z,$,J,K,nn,(0,s._)("a",en,[an,(0,s.Wm)(tn)]),sn])])]),ln],64)}]])},3744:(n,e)=>{e.Z=(n,e)=>{for(const[a,s]of e)n[a]=s;return n}}}]);